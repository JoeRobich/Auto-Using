{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"",".././client/node_modules/vscode-languageserver-protocol/lib/main.js",".././client/node_modules/vscode-jsonrpc/lib/main.js",".././client/node_modules/vscode-languageclient/lib/utils/is.js","../external \"path\"",".././client/node_modules/vscode-languageclient/lib/client.js",".././client/node_modules/vscode-jsonrpc/lib/is.js",".././client/node_modules/vscode-languageclient/lib/utils/uuid.js",".././client/node_modules/vscode-jsonrpc/lib/events.js","../external \"child_process\"","../external \"fs\"",".././client/node_modules/vscode-jsonrpc/lib/messageReader.js",".././client/node_modules/vscode-jsonrpc/lib/messageWriter.js","../external \"net\"","../external \"os\"",".././client/node_modules/vscode-languageclient/lib/protocolCompletionItem.js",".././client/node_modules/vscode-languageclient/lib/protocolCodeLens.js",".././client/node_modules/vscode-languageclient/lib/protocolDocumentLink.js",".././client/src/extension.ts",".././client/node_modules/vscode-languageclient/lib/main.js",".././client/node_modules/vscode-jsonrpc/lib/messages.js",".././client/node_modules/vscode-jsonrpc/lib/cancellation.js",".././client/node_modules/vscode-jsonrpc/lib/linkedMap.js",".././client/node_modules/vscode-jsonrpc/lib/pipeSupport.js","../external \"crypto\"",".././client/node_modules/vscode-jsonrpc/lib/socketSupport.js",".././client/node_modules/vscode-languageserver-types/lib/esm/main.js",".././client/node_modules/vscode-languageserver-protocol/lib/protocol.js",".././client/node_modules/vscode-languageserver-protocol/lib/utils/is.js",".././client/node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js",".././client/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js",".././client/node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js",".././client/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js",".././client/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js",".././client/node_modules/vscode-languageclient/lib/codeConverter.js",".././client/node_modules/vscode-languageclient/lib/protocolConverter.js",".././client/node_modules/vscode-languageclient/lib/utils/async.js",".././client/node_modules/vscode-languageclient/lib/colorProvider.js",".././client/node_modules/vscode-languageclient/lib/configuration.js",".././client/node_modules/vscode-languageclient/lib/implementation.js",".././client/node_modules/vscode-languageclient/lib/typeDefinition.js",".././client/node_modules/vscode-languageclient/lib/workspaceFolders.js",".././client/node_modules/vscode-languageclient/lib/utils/electron.js",".././client/node_modules/vscode-languageclient/lib/utils/processes.js",".././client/src/util.ts","../external \"util\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__export","vscode_jsonrpc_1","ErrorCodes","ResponseError","CancellationToken","CancellationTokenSource","Disposable","Event","Emitter","Trace","SetTraceNotification","LogTraceNotification","RequestType","RequestType0","NotificationType","NotificationType0","MessageReader","MessageWriter","ConnectionStrategy","StreamMessageReader","StreamMessageWriter","IPCMessageReader","IPCMessageWriter","createClientPipeTransport","createServerPipeTransport","generateRandomPipeName","createClientSocketTransport","createServerSocketTransport","createProtocolConnection","reader","writer","logger","strategy","createMessageConnection","extendStatics","__extends","this","setPrototypeOf","__proto__","Array","b","__","constructor","Is","messages_1","RequestType1","RequestType2","RequestType3","RequestType4","RequestType5","RequestType6","RequestType7","RequestType8","RequestType9","NotificationType1","NotificationType2","NotificationType3","NotificationType4","NotificationType5","NotificationType6","NotificationType7","NotificationType8","NotificationType9","messageReader_1","SocketMessageReader","messageWriter_1","SocketMessageWriter","events_1","cancellation_1","CancelNotification","ConnectionErrors","linkedMap_1","type","NullLogger","freeze","error","warn","info","log","fromString","toLowerCase","Off","Messages","Verbose","toString","ConnectionState","ConnectionError","_super","code","message","_this","Error","_createMessageConnection","messageReader","messageWriter","timer","tracer","sequenceNumber","notificationSquenceNumber","unknownResponseSquenceNumber","version","starRequestHandler","undefined","requestHandlers","starNotificationHandler","notificationHandlers","messageQueue","LinkedMap","responsePromises","requestTokens","trace","state","New","errorEmitter","closeEmitter","unhandledNotificationEmitter","disposeEmitter","createRequestQueueKey","id","addMessageToQueue","queue","isRequestMessage","set","isResponseMessage","cancelUndispatched","_message","isListening","Listening","isClosed","Closed","isDisposed","Disposed","closeHandler","fire","triggerMessageQueue","size","setImmediate","shift","requestMessage","reply","resultOrError","method","startTime","jsonrpc","toJson","result","traceSendingResponse","write","replyError","data","params","JSON","stringify","traceReceivedRequest","requestHandler","element","handler","Date","now","cancellationSource","tokenKey_1","String","handlerResult","promise","numberOfParams","token","array","apply","concat","then","string","InternalError","replySuccess","MethodNotFound","handleRequest","isNotificationMessage","notificationHandler","source","cancel","traceReceivedNotification","handleNotification","responseMessage","responsePromise","timerStart","traceReceivedResponse","reject","resolve","handleResponse","number","responseHandler","handleInvalidMessage","processMessageQueue","onClose","onError","callback","toCancel","response","delete","throwIfClosedOrDisposed","undefinedToNull","param","computeMessageParams","length","push","connection","sendNotification","messageParams","_i","arguments","notificationMessage","traceSendNotification","onNotification","func","sendRequest","throwIfNotListening","is","last","slice","map","Promise","traceSendingRequest","e","MessageWriteError","onCancellationRequested","onRequest","_value","_tracer","event","onUnhandledNotification","onDispose","dispose","keys","forEach","listen","AlreadyListening","throwIfListening","inspect","console","verbose","candidate","input","output","read","end","isMessageWriter","isArray","boolean","stringArray","every","elem","typedArray","check","thenable","vscode_1","vscode_languageserver_protocol_1","c2p","p2c","async_1","UUID","ConsoleLogger","[object Object]","ErrorAction","CloseAction","RevealOutputChannelOn","State","ClientState","TransportKind","DefaultErrorHandler","restarts","_error","count","Continue","Shutdown","Restart","window","showErrorMessage","DoNotRestart","SupporedSymbolKinds","SymbolKind","File","Module","Namespace","Package","Class","Method","Property","Field","Constructor","Enum","Interface","Function","Variable","Constant","Number","Boolean","Key","Null","EnumMember","Struct","Operator","TypeParameter","SupportedCompletionItemKinds","CompletionItemKind","Text","Unit","Value","Keyword","Snippet","Color","Reference","Folder","ensure","target","DynamicFeature","register","unregister","messages","DocumentNotifiactions","_client","_event","_type","_middleware","_createParams","_selectorFilter","_selectors","Map","selectors","textDocument","selector","languages","match","registerOptions","documentSelector","_listener","values","notificationSent","_data","clear","DidOpenTextDocumentFeature","client","_syncedDocuments","super","workspace","onDidOpenTextDocument","DidOpenTextDocumentNotification","clientOptions","middleware","didOpen","code2ProtocolConverter","asOpenTextDocumentParams","textDocumentFilter","capabilities","dynamicRegistration","textDocumentSyncOptions","resolvedTextDocumentSync","openClose","generateUuid","textDocuments","uri","has","DidCloseTextDocumentFeature","onDidCloseTextDocument","DidCloseTextDocumentNotification","didClose","asCloseTextDocumentParams","DidChangeTextDocumentFeature","_changeData","_forcingDelivery","DidChangeTextDocumentNotification","change","TextDocumentSyncKind","None","assign","syncKind","onDidChangeTextDocument","contentChanges","changeData","document","Incremental","asChangeTextDocumentParams","didChange","Full","_changeDelayer","forceDelivery","delayer","trigger","Delayer","WillSaveFeature","onWillSaveTextDocument","WillSaveTextDocumentNotification","willSave","willSaveEvent","asWillSaveTextDocumentParams","WillSaveWaitUntilFeature","WillSaveTextDocumentWaitUntilRequest","willSaveWaitUntil","edits","vEdits","protocol2CodeConverter","asTextEdits","waitUntil","DidSaveTextDocumentFeature","onDidSaveTextDocument","DidSaveTextDocumentNotification","didSave","asSaveTextDocumentParams","_includeText","save","includeText","FileSystemWatcherFeature","_notifyFileEvent","_watchers","DidChangeWatchedFilesNotification","_capabilities","_documentSelector","_method","watchers","disposeables","watcher","globPattern","watchCreate","watchChange","watchDelete","kind","WatchKind","Create","Change","Delete","fileSystemWatcher","createFileSystemWatcher","hookListeners","fileSystemWatchers","listeners","onDidCreate","resource","asUri","FileChangeType","Created","onDidChange","Changed","onDidDelete","Deleted","disposable","TextDocumentFeature","_providers","provider","registerLanguageProvider","WorkspaceFeature","CompletionItemFeature","CompletionRequest","capabilites","completion","contextSupport","completionItem","snippetSupport","commitCharactersSupport","documentationFormat","MarkupKind","Markdown","PlainText","deprecatedSupport","completionItemKind","valueSet","completionProvider","options","triggerCharacters","provideCompletionItems","position","context","asCompletionParams","asCompletionResult","logFailedRequest","resolveCompletionItem","item","CompletionResolveRequest","asCompletionItem","registerCompletionItemProvider","provideCompletionItem","resolveProvider","HoverFeature","HoverRequest","hoverCapability","contentFormat","hoverProvider","provideHover","asTextDocumentPositionParams","asHover","registerHoverProvider","SignatureHelpFeature","SignatureHelpRequest","config","signatureInformation","signatureHelpProvider","providerSignatureHelp","asSignatureHelp","registerSignatureHelpProvider","provideSignatureHelp","DefinitionFeature","DefinitionRequest","definitionProvider","provideDefinition","asDefinitionResult","registerDefinitionProvider","ReferencesFeature","ReferencesRequest","referencesProvider","providerReferences","asReferenceParams","asReferences","registerReferenceProvider","provideReferences","DocumentHighlightFeature","DocumentHighlightRequest","documentHighlightProvider","provideDocumentHighlights","asDocumentHighlights","registerDocumentHighlightProvider","DocumentSymbolFeature","DocumentSymbolRequest","symbolCapabilities","symbolKind","documentSymbolProvider","provideDocumentSymbols","asDocumentSymbolParams","asSymbolInformations","registerDocumentSymbolProvider","WorkspaceSymbolFeature","WorkspaceSymbolRequest","workspaceSymbolProvider","_options","provideWorkspaceSymbols","query","registerWorkspaceSymbolProvider","CodeActionFeature","CodeActionRequest","codeActionProvider","provideCodeActions","range","asTextDocumentIdentifier","asRange","asCodeActionContext","asCommands","registerCodeActionsProvider","CodeLensFeature","CodeLensRequest","codeLensProvider","provideCodeLenses","asCodeLensParams","asCodeLenses","resolveCodeLens","codeLens","CodeLensResolveRequest","asCodeLens","registerCodeLensProvider","DocumentFormattingFeature","DocumentFormattingRequest","documentFormattingProvider","provideDocumentFormattingEdits","asFormattingOptions","registerDocumentFormattingEditProvider","DocumentRangeFormattingFeature","DocumentRangeFormattingRequest","documentRangeFormattingProvider","provideDocumentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","DocumentOnTypeFormattingFeature","DocumentOnTypeFormattingRequest","documentOnTypeFormattingProvider","moreTriggerCharacter","provideOnTypeFormattingEdits","ch","asPosition","registerOnTypeFormattingEditProvider","firstTriggerCharacter","RenameFeature","RenameRequest","renameProvider","provideRenameEdits","newName","asWorkspaceEdit","registerRenameProvider","DocumentLinkFeature","DocumentLinkRequest","documentLinkProvider","provideDocumentLinks","asDocumentLinkParams","asDocumentLinks","resolveDocumentLink","link","DocumentLinkResolveRequest","asDocumentLink","registerDocumentLinkProvider","ConfigurationFeature","_listeners","DidChangeConfigurationNotification","section","synchronize","configurationSection","onDidChangeConfiguration","sections","didChangeConfiguration","settings","extractSettingsInformation","getMiddleware","ensurePath","path","current","obj","workspaceFolder","index","indexOf","getConfiguration","substr","split","ExecuteCommandFeature","_commands","ExecuteCommandRequest","executeCommandProvider","commands","command","registerCommand","args","MessageTransports","BaseLanguageClient","_features","_method2Message","_dynamicFeatures","_id","_name","_clientOptions","diagnosticCollectionName","outputChannelName","revealOutputChannelOn","stdioEncoding","initializationOptions","initializationFailedHandler","errorHandler","uriConverters","Initial","_connectionPromise","_resolvedConnection","_initializeResult","outputChannel","_outputChannel","_disposeOutputChannel","_diagnostics","_fileEvents","_fileEventDelayer","_onReady","_onReadyCallbacks","_onStop","_telemetryEmitter","_stateChangeEmitter","logTrace","_c2p","createConverter","code2Protocol","_p2c","protocol2Code","registerBuiltinFeatures","_state","oldState","getPublicState","newState","Running","Stopped","initializeResult","isConnectionActive","forceDocumentSync","onTelemetry","onDidChangeState","createOutputChannel","diagnostics","_trace","onReady","resolveConnection","responseError","stack","appendLine","toLocaleTimeString","data2String","Info","show","Warn","Stopping","Starting","createDiagnosticCollection","onLogMessage","MessageType","Warning","onShowMessage","showWarningMessage","showInformationMessage","ShowMessageRequest","messageFunc","actions","initialize","StartFailed","needsStop","stop","createConnection","refreshTrace","initOption","rootPath","fsPath","_clientGetRootPath","initParams","processId","process","pid","rootUri","Uri","file","computeClientCapabilities","workspaceFolders","fillInitializeParams","textDocumentSync","onDiagnostics","handleDiagnostics","RegistrationRequest","handleRegistrationRequest","UnregistrationRequest","handleUnregistrationRequest","ApplyWorkspaceEditRequest","handleApplyWorkspaceEdit","InitializedNotification","hookFileEvents","hookConfigurationChanged","initializeFeatures","retry","title","folders","folder","scheme","cleanUp","shutdown","exit","channel","listener","didChangeWatchedFiles","changes","asDiagnostics","setDiagnostics","handleConnectionError","handleConnectionClosed","createMessageTransports","transports","InitializeRequest","ShutdownRequest","ExitNotification","LogMessageNotification","ShowMessageNotification","TelemetryEventNotification","didOpenTextDocument","didChangeTextDocument","didCloseTextDocument","didSaveTextDocument","PublishDiagnosticsNotification","action","closed","start","_connection","fileEvents","registerRaw","features","feature","registerFeature","notifyFileEvent","applyEdit","documentChanges","relatedInformation","fillClientCapabilities","registration","registrations","unregistration","unregisterations","workspaceEdit","edit","openTextDocuments","versionMismatch","applied","RequestCancelled","ValueUUID","other","asHex","V4UUID","_randomHex","_oneOf","_timeHighBits","join","Math","floor","random","_chars","v4","empty","_UUIDPattern","isUUID","test","parse","_disposable","CallbackList","add","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","len","splice","invoke","ret","callbacks","contexts","isEmpty","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","configurable","DefaultSize","CR","Buffer","LF","MessageBuffer","encoding","buffer","append","chunk","toAppend","str","bufferLen","byteLength","copy","newSize","ceil","tryReadHeaders","header","trim","nextStart","tryReadContent","onPartialMessage","AbstractMessageReader","partialMessageEmitter","fireError","asError","fireClose","firePartialMessage","readable","_partialMessageTimeout","timeout","nextMessageLength","messageToken","partialMessageTimer","on","onData","headers","contentLength","parseInt","isNaN","msg","setPartialMessageTimer","clearPartialMessageTimer","json","clearTimeout","setTimeout","waitingTime","eventEmitter","socket","AbstractMessageWriter","writable","errorCount","sending","doWriteMessage","send","handleError","default","CompletionItem","label","CodeLens","DocumentLink","vscode","vscode_languageclient_1","path_1","util_1","fs_1","util_2","debugServerLocation","releaseServerLocation","hoverRequest","dotnetExe","HANDLE_COMPLETION","CLEAN_CACHE","cleanGlobalCache","dir","globalStoragePath","globalCacheLocation","removeDirectoryContents","activate","releaseServerModule","asAbsolutePath","debugServerModule","setup","extensionDir","extensionPath","projects","getAllProjectFiles","workspaceStorageDir","storagePath","globalStorageDir","serverOptions","run","debug","language","LanguageClient","testHelper","TestHelper","started","request","__awaiter","pos","Position","line","character","filePath","getHoverString","chosenTrace","clientDisposable","subscriptions","Namespaces","completions","getStoredCompletions","namespacesSorted","all","sort","n1","n2","firstPrio","completionCommon","StoredCompletion","Name","secondPrio","localeCompare","showQuickPick","pick","addUsing","storeCompletion","registerHandleCompletionCommand","cleanAllWorkspaceCache","choice","executeCommand","registerCleanGlobalCacheCommand","readdirPromise","promisify","readdir","lstatPromise","lstat","unlinkPromise","unlink","allWorkspaceStorageDir","dirname","workspaceDirs","workspaceDir","absoluteWorkspaceDir","isDirectory","workspaceFiles","workspaceFile","extensionId","cacheDir","workspaceCacheLocation","projectCaches","projectCacheDir","deactivate","cp","fs","client_1","colorProvider_1","configuration_1","implementation_1","typeDefinition_1","workspaceFolders_1","electron","processes_1","Executable","Transport","NodeModule","StreamInfo","ChildProcessInfo","ProposedFeatures","isSocket","port","detached","arg1","arg2","arg3","arg4","arg5","forceDebug","_serverOptions","_forceDebug","_serverProcess","toCheck","_isDetached","checkProcessDied","childProcess","kill","terminate","server","stderr","stdout","stdin","runDebug","v8debug","execArgv","some","arg","startedInDebugMode","_getServerWorkingDir","serverWorkingDir","node","transport","stdio","runtime","pipeName","ipc","pipe","cwd","fork","serverProcess","onConnected","protocol","execOptions","env","getEnvironment","spawn","registerFeatures","createAll","TypeDefinitionFeature","ImplementationFeature","ColorProviderFeature","WorkspaceFoldersFeature","_mainGetRootPath","err","stats","SettingMonitor","_setting","primary","rest","enabled","needsStart","ParseError","InvalidRequest","InvalidParams","serverErrorStart","serverErrorEnd","ServerNotInitialized","UnknownErrorCode","MessageReadError","AbstractMessageType","_numberOfParams","_","isCancellationRequested","Cancelled","shortcutEvent","handle","MutableToken","_isCancelled","_emitter","_token","Touch","First","Last","_map","_head","_tail","_size","touch","next","previous","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","forEachReverse","os_1","crypto_1","net_1","randomSuffix","randomBytes","platform","tmpdir","connectResolve","connected","_reject","createServer","close","removeListener","Range","Location","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","__webpack_exports__","WorkspaceChange","TextDocumentIdentifier","VersionedTextDocumentIdentifier","TextDocumentItem","InsertTextFormat","CompletionList","MarkedString","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolInformation","CodeActionContext","FormattingOptions","EOL","TextDocument","TextDocumentSaveReason","defined","one","two","three","four","location","Information","Hint","severity","replace","newText","insert","del","TextEditChangeImpl","_textEditChanges","_workspaceEdit","textDocumentEdit","textEditChange","getTextEditChange","languageId","text","items","isIncomplete","fromPlainText","plainText","documentation","parameters","Read","Write","containerName","tabSize","insertSpaces","content","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","sortedEdits","mergeSort","compare","left","right","leftIdx","rightIdx","a","diff","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","charAt","offset","max","min","low","high","mid","lineOffset","nextLineOffset","protocol_implementation_1","ImplementationRequest","protocol_typeDefinition_1","TypeDefinitionRequest","protocol_workspaceFolders_1","WorkspaceFoldersRequest","DidChangeWorkspaceFoldersNotification","protocol_configuration_1","ConfigurationRequest","protocol_colorProvider_1","DocumentColorRequest","ColorPresentationRequest","DocumentFilter","pattern","InitializeError","unknownProtocolVersion","Log","CompletionTriggerKind","Invoked","TriggerCharacter","TriggerForIncompleteCompletions","proto","protocolCompletionItem_1","protocolCodeLens_1","protocolDocumentLink_1","uriConverter","_uriConverter","asVersionedTextDocumentIdentifier","asTextDocumentSaveReason","reason","asTriggerKind","triggerKind","asWorkerPosition","asDiagnosticSeverity","asDiagnostic","asTextEdit","asCommand","isTextDocument","isTextDocumentChangeEvent","rangeLength","includeContent","triggerCharacter","protocolItem","original","detail","format","asDocumentation","filterText","textEdit","insertText","SnippetString","insertTextFormat","fromEdit","fillPrimaryInsertText","originalItemKind","sortText","additionalTextEdits","commitCharacters","deprecated","includeDeclaration","ls","CodeBlock","diagnostic","asDiagnosticRelatedInformation","information","asLocation","MarkdownString","asCompletionInsertText","itemKind","asSignatureInformations","asSignatureInformation","asParameterInformations","asParameterInformation","asDocumentHighlight","asDocumentHighlightKind","asSymbolInformation","asSymbolKind","hover","Hover","appendCodeblock","appendMarkdown","appendText","asHoverContent","contents","list","SignatureHelp","activeSignature","activeParameter","signatures","WorkspaceEdit","defaultDelay","completionPromise","onSuccess","task","delay","cancelTimeout","colorProvider","implCapabilities","provideColorPresentations","color","requestParams","asColorPresentations","provideDocumentColors","asColorInformations","registerColorProvider","red","green","blue","alpha","colorInformation","ci","ColorInformation","asColor","colorPresentations","presentation","ColorPresentation","configuration","scopeUri","lastIndexOf","implementationProvider","provideImplementation","registerImplementationProvider","typeDefinitionProvider","provideTypeDefinition","registerTypeDefinitionProvider","access","asProtocol","onDidChangeWorkspaceFolders","didChangeWorkspaceFolders","added","removed","__dirname","os","net","generatePipeName","randomName","chars","makeRandomHexString","modulePath","callbackCalled","stdInPipeName","stdOutPipeName","newEnv","generatePatchedEnv","stdOutServer","stdOutStream","once","_chunk","connect","serverClosed","closeServer","bootstrapperPath","silent","isWindows","isMacintosh","isLinux","execFileSync","cmd","spawnSync","SORT_CHEAT","CommonCompletionDirectory","CommonCompletionLocation","storageInvalid","readFileSync","InitializeStorage","existingStorage","writeFile","existsSync","mkdirSync","writeFileSync","namespace","activeTextEditor","typeInfoIdentifier","find","startsWith","projectExtension","flatten","arr","reduce","acc","val","findByExtensionDeep","extension","recFindByExtLogic","files","readdirSync","newFolder","statSync"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = require(\"vscode\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Is = require(\"./is\");\r\nvar messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nvar messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nvar events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nvar cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nvar linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: function () { },\r\n    warn: function () { },\r\n    info: function () { },\r\n    log: function () { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nvar ConnectionError = /** @class */ (function (_super) {\r\n    __extends(ConnectionError, _super);\r\n    function ConnectionError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        Object.setPrototypeOf(_this, ConnectionError.prototype);\r\n        return _this;\r\n    }\r\n    return ConnectionError;\r\n}(Error));\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    var sequenceNumber = 0;\r\n    var notificationSquenceNumber = 0;\r\n    var unknownResponseSquenceNumber = 0;\r\n    var version = '2.0';\r\n    var starRequestHandler = undefined;\r\n    var requestHandlers = Object.create(null);\r\n    var starNotificationHandler = undefined;\r\n    var notificationHandlers = Object.create(null);\r\n    var timer;\r\n    var messageQueue = new linkedMap_1.LinkedMap();\r\n    var responsePromises = Object.create(null);\r\n    var requestTokens = Object.create(null);\r\n    var trace = Trace.Off;\r\n    var tracer;\r\n    var state = ConnectionState.New;\r\n    var errorEmitter = new events_1.Emitter();\r\n    var closeEmitter = new events_1.Emitter();\r\n    var unhandledNotificationEmitter = new events_1.Emitter();\r\n    var disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(function () {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        var message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    var callback = function (message) {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                var key = createRequestQueueKey(message.params.id);\r\n                var toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    var response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        var element = requestHandlers[requestMessage.method];\r\n        var type;\r\n        var requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        var startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            var cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            var tokenKey_1 = String(requestMessage.id);\r\n            requestTokens[tokenKey_1] = cancellationSource;\r\n            try {\r\n                var handlerResult = void 0;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler.apply(void 0, requestMessage.params.concat([cancellationSource.token])) : starRequestHandler.apply(void 0, [requestMessage.method].concat(requestMessage.params, [cancellationSource.token]));\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                var promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey_1];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then(function (resultOrError) {\r\n                        delete requestTokens[tokenKey_1];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, function (error) {\r\n                        delete requestTokens[tokenKey_1];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed with message: \" + error.message), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed unexpectedly without providing any details.\"), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey_1];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey_1];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed with message: \" + error.message), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed unexpectedly without providing any details.\"), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, \"Unhandled method \" + requestMessage.method), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(\"Received response message without id: Error is: \\n\" + JSON.stringify(responseMessage.error, undefined, 4));\r\n            }\r\n            else {\r\n                logger.error(\"Received response message without id. No further error information provided.\");\r\n            }\r\n        }\r\n        else {\r\n            var key = String(responseMessage.id);\r\n            var responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        var error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(\"Response handler '\" + responsePromise.method + \"' failed with message: \" + error.message);\r\n                    }\r\n                    else {\r\n                        logger.error(\"Response handler '\" + responsePromise.method + \"' failed unexpectedly.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        var type = undefined;\r\n        var notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = function (params) {\r\n                var id = params.id;\r\n                var source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            var element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler.apply(void 0, message.params) : starNotificationHandler.apply(void 0, [message.method].concat(message.params));\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(\"Notification handler '\" + message.method + \"' failed with message: \" + error.message);\r\n                }\r\n                else {\r\n                    logger.error(\"Notification handler '\" + message.method + \"' failed unexpectedly.\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(\"Received message which is neither a response nor a notification message:\\n\" + JSON.stringify(message, null, 4));\r\n        // Test whether we find an id to reject the promise\r\n        var responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            var key = String(responseMessage.id);\r\n            var responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose && message.params) {\r\n            data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n        }\r\n        tracer.log(\"Sending request '\" + message.method + \" - (\" + message.id + \")'.\", data);\r\n    }\r\n    function traceSendNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.params) {\r\n                data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                data = 'No parameters provided.\\n\\n';\r\n            }\r\n        }\r\n        tracer.log(\"Sending notification '\" + message.method + \"'.\", data);\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.error && message.error.data) {\r\n                data = \"Error data: \" + JSON.stringify(message.error.data, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                if (message.result) {\r\n                    data = \"Result: \" + JSON.stringify(message.result, null, 4) + \"\\n\\n\";\r\n                }\r\n                else if (message.error === void 0) {\r\n                    data = 'No result returned.\\n\\n';\r\n                }\r\n            }\r\n        }\r\n        tracer.log(\"Sending response '\" + method + \" - (\" + message.id + \")'. Processing request took \" + (Date.now() - startTime) + \"ms\", data);\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose && message.params) {\r\n            data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n        }\r\n        tracer.log(\"Received request '\" + message.method + \" - (\" + message.id + \")'.\", data);\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.params) {\r\n                data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                data = 'No parameters provided.\\n\\n';\r\n            }\r\n        }\r\n        tracer.log(\"Received notification '\" + message.method + \"'.\", data);\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.error && message.error.data) {\r\n                data = \"Error data: \" + JSON.stringify(message.error.data, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                if (message.result) {\r\n                    data = \"Result: \" + JSON.stringify(message.result, null, 4) + \"\\n\\n\";\r\n                }\r\n                else if (message.error === void 0) {\r\n                    data = 'No result returned.\\n\\n';\r\n                }\r\n            }\r\n        }\r\n        if (responsePromise) {\r\n            var error = message.error ? \" Request failed: \" + message.error.message + \" (\" + message.error.code + \").\" : '';\r\n            tracer.log(\"Received response '\" + responsePromise.method + \" - (\" + message.id + \")' in \" + (Date.now() - responsePromise.timerStart) + \"ms.\" + error, data);\r\n        }\r\n        else {\r\n            tracer.log(\"Received response \" + message.id + \" without active response promise.\", data);\r\n        }\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        var result;\r\n        var numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (var i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (var i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    var connection = {\r\n        sendNotification: function (type) {\r\n            var params = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                params[_i - 1] = arguments[_i];\r\n            }\r\n            throwIfClosedOrDisposed();\r\n            var method;\r\n            var messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            var notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: function (type, handler) {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler: handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type: type, handler: handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: function (type) {\r\n            var params = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                params[_i - 1] = arguments[_i];\r\n            }\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            var method;\r\n            var messageParams;\r\n            var token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        var last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(function (value) { return undefinedToNull(value); });\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(function (value) { return undefinedToNull(value); });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                var numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            var id = sequenceNumber++;\r\n            var result = new Promise(function (resolve, reject) {\r\n                var requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                var responsePromise = { method: method, timerStart: Date.now(), resolve: resolve, reject: reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(function () {\r\n                    connection.sendNotification(CancelNotification.type, { id: id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: function (type, handler) {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler: handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type: type, handler: handler };\r\n                }\r\n            }\r\n        },\r\n        trace: function (_value, _tracer, sendNotification) {\r\n            if (sendNotification === void 0) { sendNotification = false; }\r\n            trace = _value;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: function () {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            var error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach(function (key) {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: function () {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: function () {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, function (params) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    var reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    var writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n","module.exports = require(\"path\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst c2p = require(\"./codeConverter\");\r\nconst p2c = require(\"./protocolConverter\");\r\nconst Is = require(\"./utils/is\");\r\nconst async_1 = require(\"./utils/async\");\r\nconst UUID = require(\"./utils/uuid\");\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nclass ConsoleLogger {\r\n    error(message) {\r\n        console.error(message);\r\n    }\r\n    warn(message) {\r\n        console.warn(message);\r\n    }\r\n    info(message) {\r\n        console.info(message);\r\n    }\r\n    log(message) {\r\n        console.log(message);\r\n    }\r\n}\r\nfunction createConnection(input, output, errorHandler, closeHandler) {\r\n    let logger = new ConsoleLogger();\r\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\r\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\r\n    connection.onClose(closeHandler);\r\n    let result = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\r\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\r\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\r\n        trace: (value, tracer, sendNotification = false) => connection.trace(value, tracer, sendNotification),\r\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\r\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\r\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\r\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\r\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\r\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\r\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\r\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\r\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\r\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\r\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\r\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\r\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    return result;\r\n}\r\nvar TransportKind;\r\n(function (TransportKind) {\r\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\r\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\r\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\r\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\r\n/**\r\n * An action to be performed when the connection is producing errors.\r\n */\r\nvar ErrorAction;\r\n(function (ErrorAction) {\r\n    /**\r\n     * Continue running the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\r\n    /**\r\n     * Shutdown the server.\r\n     */\r\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\r\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\r\n/**\r\n * An action to be performed when the connection to a server got closed.\r\n */\r\nvar CloseAction;\r\n(function (CloseAction) {\r\n    /**\r\n     * Don't restart the server. The connection stays closed.\r\n     */\r\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\r\n    /**\r\n     * Restart the server.\r\n     */\r\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\r\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\r\nclass DefaultErrorHandler {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.restarts = [];\r\n    }\r\n    error(_error, _message, count) {\r\n        if (count && count <= 3) {\r\n            return ErrorAction.Continue;\r\n        }\r\n        return ErrorAction.Shutdown;\r\n    }\r\n    closed() {\r\n        this.restarts.push(Date.now());\r\n        if (this.restarts.length < 5) {\r\n            return CloseAction.Restart;\r\n        }\r\n        else {\r\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\r\n            if (diff <= 3 * 60 * 1000) {\r\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\r\n                return CloseAction.DoNotRestart;\r\n            }\r\n            else {\r\n                this.restarts.shift();\r\n                return CloseAction.Restart;\r\n            }\r\n        }\r\n    }\r\n}\r\nvar RevealOutputChannelOn;\r\n(function (RevealOutputChannelOn) {\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\r\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\r\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\r\nvar State;\r\n(function (State) {\r\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\r\n    State[State[\"Running\"] = 2] = \"Running\";\r\n})(State = exports.State || (exports.State = {}));\r\nvar ClientState;\r\n(function (ClientState) {\r\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\r\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\r\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\r\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\r\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\r\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\r\n})(ClientState || (ClientState = {}));\r\nconst SupporedSymbolKinds = [\r\n    vscode_languageserver_protocol_1.SymbolKind.File,\r\n    vscode_languageserver_protocol_1.SymbolKind.Module,\r\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\r\n    vscode_languageserver_protocol_1.SymbolKind.Package,\r\n    vscode_languageserver_protocol_1.SymbolKind.Class,\r\n    vscode_languageserver_protocol_1.SymbolKind.Method,\r\n    vscode_languageserver_protocol_1.SymbolKind.Property,\r\n    vscode_languageserver_protocol_1.SymbolKind.Field,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\r\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\r\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\r\n    vscode_languageserver_protocol_1.SymbolKind.Function,\r\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\r\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\r\n    vscode_languageserver_protocol_1.SymbolKind.String,\r\n    vscode_languageserver_protocol_1.SymbolKind.Number,\r\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\r\n    vscode_languageserver_protocol_1.SymbolKind.Array,\r\n    vscode_languageserver_protocol_1.SymbolKind.Object,\r\n    vscode_languageserver_protocol_1.SymbolKind.Key,\r\n    vscode_languageserver_protocol_1.SymbolKind.Null,\r\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\r\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\r\n    vscode_languageserver_protocol_1.SymbolKind.Event,\r\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\r\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\r\n];\r\nconst SupportedCompletionItemKinds = [\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\r\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\r\n];\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nvar DynamicFeature;\r\n(function (DynamicFeature) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\r\n    }\r\n    DynamicFeature.is = is;\r\n})(DynamicFeature || (DynamicFeature = {}));\r\nclass DocumentNotifiactions {\r\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\r\n        this._client = _client;\r\n        this._event = _event;\r\n        this._type = _type;\r\n        this._middleware = _middleware;\r\n        this._createParams = _createParams;\r\n        this._selectorFilter = _selectorFilter;\r\n        this._selectors = new Map();\r\n    }\r\n    static textDocumentFilter(selectors, textDocument) {\r\n        for (const selector of selectors) {\r\n            if (vscode_1.languages.match(selector, textDocument)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = this._event(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(data) {\r\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\r\n            if (this._middleware) {\r\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\r\n            }\r\n            else {\r\n                this._client.sendNotification(this._type, this._createParams(data));\r\n            }\r\n            this.notificationSent(data);\r\n        }\r\n    }\r\n    notificationSent(_data) {\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n}\r\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    register(message, data) {\r\n        super.register(message, data);\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let documentSelector = data.registerOptions.documentSelector;\r\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\r\n            let uri = textDocument.uri.toString();\r\n            if (this._syncedDocuments.has(uri)) {\r\n                return;\r\n            }\r\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didOpen = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                if (middleware.didOpen) {\r\n                    middleware.didOpen(textDocument, didOpen);\r\n                }\r\n                else {\r\n                    didOpen(textDocument);\r\n                }\r\n                this._syncedDocuments.set(uri, textDocument);\r\n            }\r\n        });\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\r\n    }\r\n}\r\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client, _syncedDocuments) {\r\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifiactions.textDocumentFilter);\r\n        this._syncedDocuments = _syncedDocuments;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\r\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\r\n        }\r\n    }\r\n    notificationSent(textDocument) {\r\n        super.notificationSent(textDocument);\r\n        this._syncedDocuments.delete(textDocument.uri.toString());\r\n    }\r\n    unregister(id) {\r\n        let selector = this._selectors.get(id);\r\n        // The super call removed the selector from the map\r\n        // of selectors.\r\n        super.unregister(id);\r\n        let selectors = this._selectors.values();\r\n        this._syncedDocuments.forEach((textDocument) => {\r\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                let didClose = (textDocument) => {\r\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\r\n                };\r\n                this._syncedDocuments.delete(textDocument.uri.toString());\r\n                if (middleware.didClose) {\r\n                    middleware.didClose(textDocument, didClose);\r\n                }\r\n                else {\r\n                    didClose(textDocument);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DidChangeTextDocumentFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._changeData = new Map();\r\n        this._forcingDelivery = false;\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\r\n        }\r\n        this._changeData.set(data.id, {\r\n            documentSelector: data.registerOptions.documentSelector,\r\n            syncKind: data.registerOptions.syncKind\r\n        });\r\n    }\r\n    callback(event) {\r\n        // Text document changes are send for dirty changes as well. We don't\r\n        // have dirty / undirty events in the LSP so we ignore content changes\r\n        // with length zero.\r\n        if (event.contentChanges.length === 0) {\r\n            return;\r\n        }\r\n        for (const changeData of this._changeData.values()) {\r\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\r\n                let middleware = this._client.clientOptions.middleware;\r\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\r\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\r\n                    }\r\n                    else {\r\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\r\n                    }\r\n                }\r\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\r\n                    let didChange = (event) => {\r\n                        if (this._changeDelayer) {\r\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\r\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\r\n                                this.forceDelivery();\r\n                                this._changeDelayer.uri = event.document.uri.toString();\r\n                            }\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            });\r\n                        }\r\n                        else {\r\n                            this._changeDelayer = {\r\n                                uri: event.document.uri.toString(),\r\n                                delayer: new async_1.Delayer(200)\r\n                            };\r\n                            this._changeDelayer.delayer.trigger(() => {\r\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\r\n                            }, -1);\r\n                        }\r\n                    };\r\n                    if (middleware.didChange) {\r\n                        middleware.didChange(event, didChange);\r\n                    }\r\n                    else {\r\n                        didChange(event);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._changeData.delete(id);\r\n        if (this._changeData.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._changeDelayer = undefined;\r\n        this._forcingDelivery = false;\r\n        this._changeData.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    forceDelivery() {\r\n        if (this._forcingDelivery || !this._changeDelayer) {\r\n            return;\r\n        }\r\n        try {\r\n            this._forcingDelivery = true;\r\n            this._changeDelayer.delayer.forceDelivery();\r\n        }\r\n        finally {\r\n            this._forcingDelivery = false;\r\n        }\r\n    }\r\n}\r\nclass WillSaveFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document));\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass WillSaveWaitUntilFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._selectors = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\r\n        value.willSaveWaitUntil = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: { documentSelector: documentSelector }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        if (!this._listener) {\r\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\r\n        }\r\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\r\n    }\r\n    callback(event) {\r\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\r\n            let middleware = this._client.clientOptions.middleware;\r\n            let willSaveWaitUntil = (event) => {\r\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\r\n                    let vEdits = this._client.protocol2CodeConverter.asTextEdits(edits);\r\n                    return vEdits === void 0 ? [] : vEdits;\r\n                });\r\n            };\r\n            event.waitUntil(middleware.willSaveWaitUntil\r\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\r\n                : willSaveWaitUntil(event));\r\n        }\r\n    }\r\n    unregister(id) {\r\n        this._selectors.delete(id);\r\n        if (this._selectors.size === 0 && this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._selectors.clear();\r\n        if (this._listener) {\r\n            this._listener.dispose();\r\n            this._listener = undefined;\r\n        }\r\n    }\r\n}\r\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\r\n    constructor(client) {\r\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifiactions.textDocumentFilter);\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\r\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\r\n            });\r\n        }\r\n    }\r\n    register(method, data) {\r\n        this._includeText = !!data.registerOptions.includeText;\r\n        super.register(method, data);\r\n    }\r\n}\r\nclass FileSystemWatcherFeature {\r\n    constructor(_client, _notifyFileEvent) {\r\n        this._client = _client;\r\n        this._notifyFileEvent = _notifyFileEvent;\r\n        this._watchers = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\r\n    }\r\n    initialize(_capabilities, _documentSelector) {\r\n    }\r\n    register(_method, data) {\r\n        if (!Array.isArray(data.registerOptions.watchers)) {\r\n            return;\r\n        }\r\n        let disposeables = [];\r\n        for (let watcher of data.registerOptions.watchers) {\r\n            if (!Is.string(watcher.globPattern)) {\r\n                continue;\r\n            }\r\n            let watchCreate = true, watchChange = true, watchDelete = true;\r\n            if (watcher.kind !== void 0 && watcher.kind !== null) {\r\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\r\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) != 0;\r\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) != 0;\r\n            }\r\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\r\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\r\n            disposeables.push(fileSystemWatcher);\r\n        }\r\n        this._watchers.set(data.id, disposeables);\r\n    }\r\n    registerRaw(id, fileSystemWatchers) {\r\n        let disposeables = [];\r\n        for (let fileSystemWatcher of fileSystemWatchers) {\r\n            this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\r\n        }\r\n        this._watchers.set(id, disposeables);\r\n    }\r\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\r\n        if (watchCreate) {\r\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\r\n            }), null, listeners);\r\n        }\r\n        if (watchChange) {\r\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\r\n            }), null, listeners);\r\n        }\r\n        if (watchDelete) {\r\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\r\n                uri: this._client.code2ProtocolConverter.asUri(resource),\r\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\r\n            }), null, listeners);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._watchers.get(id);\r\n        if (disposeables) {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        this._watchers.forEach((disposeables) => {\r\n            for (let disposable of disposeables) {\r\n                disposable.dispose();\r\n            }\r\n        });\r\n        this._watchers.clear();\r\n    }\r\n}\r\nclass TextDocumentFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wrong feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        if (!data.registerOptions.documentSelector) {\r\n            return;\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n        this._providers.clear();\r\n    }\r\n}\r\nexports.TextDocumentFeature = TextDocumentFeature;\r\nclass WorkspaceFeature {\r\n    constructor(_client, _message) {\r\n        this._client = _client;\r\n        this._message = _message;\r\n        this._providers = new Map();\r\n    }\r\n    get messages() {\r\n        return this._message;\r\n    }\r\n    register(message, data) {\r\n        if (message.method !== this.messages.method) {\r\n            throw new Error(`Register called on wron feature. Requested ${message.method} but reached feature ${this.messages.method}`);\r\n        }\r\n        let provider = this.registerLanguageProvider(data.registerOptions);\r\n        if (provider) {\r\n            this._providers.set(data.id, provider);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let provider = this._providers.get(id);\r\n        if (provider) {\r\n            provider.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        this._providers.forEach((value) => {\r\n            value.dispose();\r\n        });\r\n        this._providers.clear();\r\n    }\r\n}\r\nclass CompletionItemFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\r\n        completion.dynamicRegistration = true;\r\n        completion.contextSupport = true;\r\n        completion.completionItem = { snippetSupport: true, commitCharactersSupport: true, documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText], deprecatedSupport: true };\r\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.completionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.completionProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        let client = this._client;\r\n        let provideCompletionItems = (document, position, context, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCompletionItem = (item, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\r\n                return Promise.resolve(item);\r\n            });\r\n        };\r\n        let middleware = this._client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCompletionItemProvider(options.documentSelector, {\r\n            provideCompletionItems: (document, position, token, context) => {\r\n                return middleware.provideCompletionItem\r\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\r\n                    : provideCompletionItems(document, position, context, token);\r\n            },\r\n            resolveCompletionItem: options.resolveProvider\r\n                ? (item, token) => {\r\n                    return middleware.resolveCompletionItem\r\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\r\n                        : resolveCompletionItem(item, token);\r\n                }\r\n                : undefined\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass HoverFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        const hoverCapability = (ensure(ensure(capabilites, 'textDocument'), 'hover'));\r\n        hoverCapability.dynamicRegistration = true;\r\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.hoverProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideHover = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerHoverProvider(options.documentSelector, {\r\n            provideHover: (document, position, token) => {\r\n                return middleware.provideHover\r\n                    ? middleware.provideHover(document, position, token, provideHover)\r\n                    : provideHover(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass SignatureHelpFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let config = ensure(ensure(capabilites, 'textDocument'), 'signatureHelp');\r\n        config.dynamicRegistration = true;\r\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.signatureHelpProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.signatureHelpProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerSignatureHelp = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        let triggerCharacters = options.triggerCharacters || [];\r\n        return vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, {\r\n            provideSignatureHelp: (document, position, token) => {\r\n                return middleware.provideSignatureHelp\r\n                    ? middleware.provideSignatureHelp(document, position, token, providerSignatureHelp)\r\n                    : providerSignatureHelp(document, position, token);\r\n            }\r\n        }, ...triggerCharacters);\r\n    }\r\n}\r\nclass DefinitionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'definition').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.definitionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDefinitionProvider(options.documentSelector, {\r\n            provideDefinition: (document, position, token) => {\r\n                return middleware.provideDefinition\r\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\r\n                    : provideDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass ReferencesFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.referencesProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let providerReferences = (document, position, options, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerReferenceProvider(options.documentSelector, {\r\n            provideReferences: (document, position, options, token) => {\r\n                return middleware.provideReferences\r\n                    ? middleware.provideReferences(document, position, options, token, providerReferences)\r\n                    : providerReferences(document, position, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentHighlightFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentHighlightProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentHighlights = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, {\r\n            provideDocumentHighlights: (document, position, token) => {\r\n                return middleware.provideDocumentHighlights\r\n                    ? middleware.provideDocumentHighlights(document, position, token, provideDocumentHighlights)\r\n                    : provideDocumentHighlights(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentSymbolFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentSymbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupporedSymbolKinds\r\n        };\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentSymbolProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentSymbols = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, {\r\n            provideDocumentSymbols: (document, token) => {\r\n                return middleware.provideDocumentSymbols\r\n                    ? middleware.provideDocumentSymbols(document, token, provideDocumentSymbols)\r\n                    : provideDocumentSymbols(document, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        let symbolCapabilities = ensure(ensure(capabilites, 'workspace'), 'symbol');\r\n        symbolCapabilities.dynamicRegistration = true;\r\n        symbolCapabilities.symbolKind = {\r\n            valueSet: SupporedSymbolKinds\r\n        };\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.workspaceSymbolProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: undefined\r\n        });\r\n    }\r\n    registerLanguageProvider(_options) {\r\n        let client = this._client;\r\n        let provideWorkspaceSymbols = (query, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerWorkspaceSymbolProvider({\r\n            provideWorkspaceSymbols: (query, token) => {\r\n                return middleware.provideWorkspaceSymbols\r\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\r\n                    : provideWorkspaceSymbols(query, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CodeActionFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'codeAction').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeActionProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeActions = (document, range, context, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                context: client.code2ProtocolConverter.asCodeActionContext(context)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then(client.protocol2CodeConverter.asCommands, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeActionsProvider(options.documentSelector, {\r\n            provideCodeActions: (document, range, context, token) => {\r\n                return middleware.provideCodeActions\r\n                    ? middleware.provideCodeActions(document, range, context, token, provideCodeActions)\r\n                    : provideCodeActions(document, range, context, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CodeLensFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.codeLensProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.codeLensProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideCodeLenses = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let resolveCodeLens = (codeLens, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\r\n                return codeLens;\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerCodeLensProvider(options.documentSelector, {\r\n            provideCodeLenses: (document, token) => {\r\n                return middleware.provideCodeLenses\r\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\r\n                    : provideCodeLenses(document, token);\r\n            },\r\n            resolveCodeLens: (options.resolveProvider)\r\n                ? (codeLens, token) => {\r\n                    return middleware.resolveCodeLens\r\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\r\n                        : resolveCodeLens(codeLens, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass DocumentFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentFormattingEdits = (document, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentFormattingEdits: (document, options, token) => {\r\n                return middleware.provideDocumentFormattingEdits\r\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\r\n                    : provideDocumentFormattingEdits(document, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentRangeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentRangeFormattingEdits = (document, range, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                range: client.code2ProtocolConverter.asRange(range),\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, {\r\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\r\n                return middleware.provideDocumentRangeFormattingEdits\r\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\r\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentOnTypeFormattingProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentOnTypeFormattingProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let moreTriggerCharacter = options.moreTriggerCharacter || [];\r\n        let provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                ch: ch,\r\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\r\n                return Promise.resolve([]);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, {\r\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\r\n                return middleware.provideOnTypeFormattingEdits\r\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\r\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\r\n            }\r\n        }, options.firstTriggerCharacter, ...moreTriggerCharacter);\r\n    }\r\n}\r\nclass RenameFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'rename').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.renameProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideRenameEdits = (document, position, newName, token) => {\r\n            let params = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\r\n                position: client.code2ProtocolConverter.asPosition(position),\r\n                newName: newName\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\r\n                return Promise.reject(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerRenameProvider(options.documentSelector, {\r\n            provideRenameEdits: (document, position, newName, token) => {\r\n                return middleware.provideRenameEdits\r\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\r\n                    : provideRenameEdits(document, position, newName, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass DocumentLinkFeature extends TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'documentLink').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.documentLinkProvider || !documentSelector) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentLinkProvider)\r\n        });\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideDocumentLinks = (document, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let resolveDocumentLink = (link, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\r\n                Promise.resolve(new Error(error.message));\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, {\r\n            provideDocumentLinks: (document, token) => {\r\n                return middleware.provideDocumentLinks\r\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\r\n                    : provideDocumentLinks(document, token);\r\n            },\r\n            resolveDocumentLink: options.resolveProvider\r\n                ? (link, token) => {\r\n                    return middleware.resolveDocumentLink\r\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\r\n                        : resolveDocumentLink(link, token);\r\n                }\r\n                : undefined\r\n        });\r\n    }\r\n}\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\r\n    }\r\n    initialize() {\r\n        let section = this._client.clientOptions.synchronize.configurationSection;\r\n        if (section !== void 0) {\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: {\r\n                    section: section\r\n                }\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let disposable = vscode_1.workspace.onDidChangeConfiguration(() => {\r\n            this.onDidChangeConfiguration(data.registerOptions.section);\r\n        });\r\n        this._listeners.set(data.id, disposable);\r\n        if (data.registerOptions.section !== void 0) {\r\n            this.onDidChangeConfiguration(data.registerOptions.section);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable) {\r\n            this._listeners.delete(id);\r\n            disposable.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    onDidChangeConfiguration(configurationSection) {\r\n        let sections;\r\n        if (Is.string(configurationSection)) {\r\n            sections = [configurationSection];\r\n        }\r\n        else {\r\n            sections = configurationSection;\r\n        }\r\n        let didChangeConfiguration = (sections) => {\r\n            if (sections === void 0) {\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\r\n                return;\r\n            }\r\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\r\n        };\r\n        let middleware = this.getMiddleware();\r\n        middleware\r\n            ? middleware(sections, didChangeConfiguration)\r\n            : didChangeConfiguration(sections);\r\n    }\r\n    extractSettingsInformation(keys) {\r\n        function ensurePath(config, path) {\r\n            let current = config;\r\n            for (let i = 0; i < path.length - 1; i++) {\r\n                let obj = current[path[i]];\r\n                if (!obj) {\r\n                    obj = Object.create(null);\r\n                    current[path[i]] = obj;\r\n                }\r\n                current = obj;\r\n            }\r\n            return current;\r\n        }\r\n        let resource = this._client.clientOptions.workspaceFolder\r\n            ? this._client.clientOptions.workspaceFolder.uri\r\n            : undefined;\r\n        let result = Object.create(null);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let key = keys[i];\r\n            let index = key.indexOf('.');\r\n            let config = null;\r\n            if (index >= 0) {\r\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\r\n            }\r\n            else {\r\n                config = vscode_1.workspace.getConfiguration(key, resource);\r\n            }\r\n            if (config) {\r\n                let path = keys[i].split('.');\r\n                ensurePath(result, path)[path[path.length - 1]] = config;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getMiddleware() {\r\n        let middleware = this._client.clientOptions.middleware;\r\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\r\n            return middleware.workspace.didChangeConfiguration;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\nclass ExecuteCommandFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._commands = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities) {\r\n        if (!capabilities.executeCommandProvider) {\r\n            return;\r\n        }\r\n        this.register(this.messages, {\r\n            id: UUID.generateUuid(),\r\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\r\n        });\r\n    }\r\n    register(_message, data) {\r\n        let client = this._client;\r\n        if (data.registerOptions.commands) {\r\n            let disposeables = [];\r\n            for (const command of data.registerOptions.commands) {\r\n                disposeables.push(vscode_1.commands.registerCommand(command, (...args) => {\r\n                    let params = {\r\n                        command,\r\n                        arguments: args\r\n                    };\r\n                    return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\r\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\r\n                    });\r\n                }));\r\n            }\r\n            this._commands.set(data.id, disposeables);\r\n        }\r\n    }\r\n    unregister(id) {\r\n        let disposeables = this._commands.get(id);\r\n        if (disposeables) {\r\n            disposeables.forEach(disposable => disposable.dispose());\r\n        }\r\n    }\r\n    dispose() {\r\n        this._commands.forEach((value) => {\r\n            value.forEach(disposable => disposable.dispose());\r\n        });\r\n        this._commands.clear();\r\n    }\r\n}\r\nvar MessageTransports;\r\n(function (MessageTransports) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\r\n    }\r\n    MessageTransports.is = is;\r\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\r\nclass BaseLanguageClient {\r\n    constructor(id, name, clientOptions) {\r\n        this._features = [];\r\n        this._method2Message = new Map();\r\n        this._dynamicFeatures = new Map();\r\n        this._id = id;\r\n        this._name = name;\r\n        clientOptions = clientOptions || {};\r\n        this._clientOptions = {\r\n            documentSelector: clientOptions.documentSelector || [],\r\n            synchronize: clientOptions.synchronize || {},\r\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\r\n            outputChannelName: clientOptions.outputChannelName || this._name,\r\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\r\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\r\n            initializationOptions: clientOptions.initializationOptions,\r\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\r\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\r\n            middleware: clientOptions.middleware || {},\r\n            uriConverters: clientOptions.uriConverters,\r\n            workspaceFolder: clientOptions.workspaceFolder\r\n        };\r\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\r\n        this.state = ClientState.Initial;\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        this._initializeResult = undefined;\r\n        if (clientOptions.outputChannel) {\r\n            this._outputChannel = clientOptions.outputChannel;\r\n            this._disposeOutputChannel = false;\r\n        }\r\n        else {\r\n            this._outputChannel = undefined;\r\n            this._disposeOutputChannel = true;\r\n        }\r\n        this._listeners = undefined;\r\n        this._providers = undefined;\r\n        this._diagnostics = undefined;\r\n        this._fileEvents = [];\r\n        this._fileEventDelayer = new async_1.Delayer(250);\r\n        this._onReady = new Promise((resolve, reject) => {\r\n            this._onReadyCallbacks = { resolve, reject };\r\n        });\r\n        this._onStop = undefined;\r\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\r\n        this._tracer = {\r\n            log: (message, data) => {\r\n                this.logTrace(message, data);\r\n            }\r\n        };\r\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\r\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\r\n        this._syncedDocuments = new Map();\r\n        this.registerBuiltinFeatures();\r\n    }\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    set state(value) {\r\n        let oldState = this.getPublicState();\r\n        this._state = value;\r\n        let newState = this.getPublicState();\r\n        if (newState !== oldState) {\r\n            this._stateChangeEmitter.fire({ oldState, newState });\r\n        }\r\n    }\r\n    getPublicState() {\r\n        if (this.state === ClientState.Running) {\r\n            return State.Running;\r\n        }\r\n        else {\r\n            return State.Stopped;\r\n        }\r\n    }\r\n    get initializeResult() {\r\n        return this._initializeResult;\r\n    }\r\n    sendRequest(type, ...params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            return this._resolvedConnection.sendRequest(type, ...params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onRequest(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onRequest(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    sendNotification(type, params) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        this.forceDocumentSync();\r\n        try {\r\n            this._resolvedConnection.sendNotification(type, params);\r\n        }\r\n        catch (error) {\r\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    onNotification(type, handler) {\r\n        if (!this.isConnectionActive()) {\r\n            throw new Error('Language client is not ready yet');\r\n        }\r\n        try {\r\n            this._resolvedConnection.onNotification(type, handler);\r\n        }\r\n        catch (error) {\r\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\r\n            throw error;\r\n        }\r\n    }\r\n    get clientOptions() {\r\n        return this._clientOptions;\r\n    }\r\n    get protocol2CodeConverter() {\r\n        return this._p2c;\r\n    }\r\n    get code2ProtocolConverter() {\r\n        return this._c2p;\r\n    }\r\n    get onTelemetry() {\r\n        return this._telemetryEmitter.event;\r\n    }\r\n    get onDidChangeState() {\r\n        return this._stateChangeEmitter.event;\r\n    }\r\n    get outputChannel() {\r\n        if (!this._outputChannel) {\r\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\r\n        }\r\n        return this._outputChannel;\r\n    }\r\n    get diagnostics() {\r\n        return this._diagnostics;\r\n    }\r\n    createDefaultErrorHandler() {\r\n        return new DefaultErrorHandler(this._name);\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n        this.onReady().then(() => {\r\n            this.resolveConnection().then((connection) => {\r\n                connection.trace(value, this._tracer);\r\n            });\r\n        }, () => {\r\n        });\r\n    }\r\n    data2String(data) {\r\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n            const responseError = data;\r\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\r\n        }\r\n        if (data instanceof Error) {\r\n            if (Is.string(data.stack)) {\r\n                return data.stack;\r\n            }\r\n            return data.message;\r\n        }\r\n        if (Is.string(data)) {\r\n            return data;\r\n        }\r\n        return data.toString();\r\n    }\r\n    info(message, data) {\r\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    warn(message, data) {\r\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    error(message, data) {\r\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\r\n            this.outputChannel.show(true);\r\n        }\r\n    }\r\n    logTrace(message, data) {\r\n        this.outputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\r\n        if (data) {\r\n            this.outputChannel.appendLine(this.data2String(data));\r\n        }\r\n    }\r\n    needsStart() {\r\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\r\n    }\r\n    needsStop() {\r\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\r\n    }\r\n    onReady() {\r\n        return this._onReady;\r\n    }\r\n    isConnectionActive() {\r\n        return this.state === ClientState.Running && !!this._resolvedConnection;\r\n    }\r\n    start() {\r\n        this._listeners = [];\r\n        this._providers = [];\r\n        // If we restart then the diagnostics collection is reused.\r\n        if (!this._diagnostics) {\r\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\r\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\r\n                : vscode_1.languages.createDiagnosticCollection();\r\n        }\r\n        this.state = ClientState.Starting;\r\n        this.resolveConnection().then((connection) => {\r\n            connection.onLogMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        this.error(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        this.warn(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        this.info(message.message);\r\n                        break;\r\n                    default:\r\n                        this.outputChannel.appendLine(message.message);\r\n                }\r\n            });\r\n            connection.onShowMessage((message) => {\r\n                switch (message.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        vscode_1.window.showErrorMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        vscode_1.window.showWarningMessage(message.message);\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                        break;\r\n                    default:\r\n                        vscode_1.window.showInformationMessage(message.message);\r\n                }\r\n            });\r\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\r\n                let messageFunc;\r\n                switch (params.type) {\r\n                    case vscode_languageserver_protocol_1.MessageType.Error:\r\n                        messageFunc = vscode_1.window.showErrorMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\r\n                        messageFunc = vscode_1.window.showWarningMessage;\r\n                        break;\r\n                    case vscode_languageserver_protocol_1.MessageType.Info:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                        break;\r\n                    default:\r\n                        messageFunc = vscode_1.window.showInformationMessage;\r\n                }\r\n                let actions = params.actions || [];\r\n                return messageFunc(params.message, ...actions);\r\n            });\r\n            connection.onTelemetry((data) => {\r\n                this._telemetryEmitter.fire(data);\r\n            });\r\n            connection.listen();\r\n            // Error is handled in the intialize call.\r\n            return this.initialize(connection);\r\n        }).then(undefined, (error) => {\r\n            this.state = ClientState.StartFailed;\r\n            this._onReadyCallbacks.reject(error);\r\n            this.error('Starting client failed', error);\r\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\r\n        });\r\n        return new vscode_1.Disposable(() => {\r\n            if (this.needsStop()) {\r\n                this.stop();\r\n            }\r\n        });\r\n    }\r\n    resolveConnection() {\r\n        if (!this._connectionPromise) {\r\n            this._connectionPromise = this.createConnection();\r\n        }\r\n        return this._connectionPromise;\r\n    }\r\n    initialize(connection) {\r\n        this.refreshTrace(connection, false);\r\n        let initOption = this._clientOptions.initializationOptions;\r\n        let rootPath = this._clientOptions.workspaceFolder\r\n            ? this._clientOptions.workspaceFolder.uri.fsPath\r\n            : this._clientGetRootPath();\r\n        let initParams = {\r\n            processId: process.pid,\r\n            rootPath: rootPath ? rootPath : null,\r\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\r\n            capabilities: this.computeClientCapabilities(),\r\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\r\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\r\n            workspaceFolders: null\r\n        };\r\n        this.fillInitializeParams(initParams);\r\n        return connection.initialize(initParams).then((result) => {\r\n            this._resolvedConnection = connection;\r\n            this._initializeResult = result;\r\n            this.state = ClientState.Running;\r\n            let textDocumentSyncOptions = undefined;\r\n            if (Is.number(result.capabilities.textDocumentSync) && result.capabilities.textDocumentSync !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\r\n                textDocumentSyncOptions = {\r\n                    openClose: true,\r\n                    change: result.capabilities.textDocumentSync,\r\n                    save: {\r\n                        includeText: false\r\n                    }\r\n                };\r\n            }\r\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\r\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\r\n            }\r\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\r\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\r\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\r\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\r\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\r\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\r\n            this.hookFileEvents(connection);\r\n            this.hookConfigurationChanged(connection);\r\n            this.initializeFeatures(connection);\r\n            this._onReadyCallbacks.resolve();\r\n            return result;\r\n        }).then(undefined, (error) => {\r\n            if (this._clientOptions.initializationFailedHandler) {\r\n                if (this._clientOptions.initializationFailedHandler(error)) {\r\n                    this.initialize(connection);\r\n                }\r\n                else {\r\n                    this.stop();\r\n                    this._onReadyCallbacks.reject(error);\r\n                }\r\n            }\r\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\r\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: \"retry\" }).then(item => {\r\n                    if (item && item.id === 'retry') {\r\n                        this.initialize(connection);\r\n                    }\r\n                    else {\r\n                        this.stop();\r\n                        this._onReadyCallbacks.reject(error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (error && error.message) {\r\n                    vscode_1.window.showErrorMessage(error.message);\r\n                }\r\n                this.error('Server initialization failed.', error);\r\n                this.stop();\r\n                this._onReadyCallbacks.reject(error);\r\n            }\r\n        });\r\n    }\r\n    _clientGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    stop() {\r\n        this._initializeResult = undefined;\r\n        if (!this._connectionPromise) {\r\n            this.state = ClientState.Stopped;\r\n            return Promise.resolve();\r\n        }\r\n        if (this.state === ClientState.Stopping && this._onStop) {\r\n            return this._onStop;\r\n        }\r\n        this.state = ClientState.Stopping;\r\n        this.cleanUp();\r\n        // unkook listeners\r\n        return this._onStop = this.resolveConnection().then(connection => {\r\n            return connection.shutdown().then(() => {\r\n                connection.exit();\r\n                connection.dispose();\r\n                this.state = ClientState.Stopped;\r\n                this._onStop = undefined;\r\n                this._connectionPromise = undefined;\r\n                this._resolvedConnection = undefined;\r\n            });\r\n        });\r\n    }\r\n    cleanUp(channel = true, diagnostics = true) {\r\n        if (this._listeners) {\r\n            this._listeners.forEach(listener => listener.dispose());\r\n            this._listeners = undefined;\r\n        }\r\n        if (this._providers) {\r\n            this._providers.forEach(provider => provider.dispose());\r\n            this._providers = undefined;\r\n        }\r\n        if (this._syncedDocuments) {\r\n            this._syncedDocuments.clear();\r\n        }\r\n        for (let handler of this._dynamicFeatures.values()) {\r\n            handler.dispose();\r\n        }\r\n        if (channel && this._outputChannel && this._disposeOutputChannel) {\r\n            this._outputChannel.dispose();\r\n            this._outputChannel = undefined;\r\n        }\r\n        if (diagnostics && this._diagnostics) {\r\n            this._diagnostics.dispose();\r\n            this._diagnostics = undefined;\r\n        }\r\n    }\r\n    notifyFileEvent(event) {\r\n        this._fileEvents.push(event);\r\n        this._fileEventDelayer.trigger(() => {\r\n            this.onReady().then(() => {\r\n                this.resolveConnection().then(connection => {\r\n                    if (this.isConnectionActive()) {\r\n                        connection.didChangeWatchedFiles({ changes: this._fileEvents });\r\n                    }\r\n                    this._fileEvents = [];\r\n                });\r\n            }, (error) => {\r\n                this.error(`Notify file events failed.`, error);\r\n            });\r\n        });\r\n    }\r\n    forceDocumentSync() {\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\r\n    }\r\n    handleDiagnostics(params) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        let uri = this._p2c.asUri(params.uri);\r\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\r\n        let middleware = this.clientOptions.middleware.handleDiagnostics;\r\n        if (middleware) {\r\n            middleware(uri, diagnostics, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\r\n        }\r\n        else {\r\n            this.setDiagnostics(uri, diagnostics);\r\n        }\r\n    }\r\n    setDiagnostics(uri, diagnostics) {\r\n        if (!this._diagnostics) {\r\n            return;\r\n        }\r\n        this._diagnostics.set(uri, diagnostics);\r\n    }\r\n    createConnection() {\r\n        let errorHandler = (error, message, count) => {\r\n            this.handleConnectionError(error, message, count);\r\n        };\r\n        let closeHandler = () => {\r\n            this.handleConnectionClosed();\r\n        };\r\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\r\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\r\n        });\r\n    }\r\n    handleConnectionClosed() {\r\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\r\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\r\n            return;\r\n        }\r\n        try {\r\n            if (this._resolvedConnection) {\r\n                this._resolvedConnection.dispose();\r\n            }\r\n        }\r\n        catch (error) {\r\n            // Disposing a connection could fail if error cases.\r\n        }\r\n        let action = CloseAction.DoNotRestart;\r\n        try {\r\n            action = this._clientOptions.errorHandler.closed();\r\n        }\r\n        catch (error) {\r\n            // Ignore errors coming from the error handler.\r\n        }\r\n        this._connectionPromise = undefined;\r\n        this._resolvedConnection = undefined;\r\n        if (action === CloseAction.DoNotRestart) {\r\n            this.error('Connection to server got closed. Server will not be restarted.');\r\n            this.state = ClientState.Stopped;\r\n            this.cleanUp(false, true);\r\n        }\r\n        else if (action === CloseAction.Restart) {\r\n            this.info('Connection to server got closed. Server will restart.');\r\n            this.cleanUp(false, false);\r\n            this.state = ClientState.Initial;\r\n            this.start();\r\n        }\r\n    }\r\n    handleConnectionError(error, message, count) {\r\n        let action = this._clientOptions.errorHandler.error(error, message, count);\r\n        if (action === ErrorAction.Shutdown) {\r\n            this.error('Connection to server is erroring. Shutting down server.');\r\n            this.stop();\r\n        }\r\n    }\r\n    hookConfigurationChanged(connection) {\r\n        vscode_1.workspace.onDidChangeConfiguration(() => {\r\n            this.refreshTrace(connection, true);\r\n        });\r\n    }\r\n    refreshTrace(connection, sendNotification = false) {\r\n        let config = vscode_1.workspace.getConfiguration(this._id);\r\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\r\n        if (config) {\r\n            trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server', 'off'));\r\n        }\r\n        this._trace = trace;\r\n        connection.trace(this._trace, this._tracer, sendNotification);\r\n    }\r\n    hookFileEvents(_connection) {\r\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\r\n        if (!fileEvents) {\r\n            return;\r\n        }\r\n        let watchers;\r\n        if (Is.array(fileEvents)) {\r\n            watchers = fileEvents;\r\n        }\r\n        else {\r\n            watchers = [fileEvents];\r\n        }\r\n        if (!watchers) {\r\n            return;\r\n        }\r\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\r\n    }\r\n    registerFeatures(features) {\r\n        for (let feature of features) {\r\n            this.registerFeature(feature);\r\n        }\r\n    }\r\n    registerFeature(feature) {\r\n        this._features.push(feature);\r\n        if (DynamicFeature.is(feature)) {\r\n            let messages = feature.messages;\r\n            if (Array.isArray(messages)) {\r\n                for (let message of messages) {\r\n                    this._method2Message.set(message.method, message);\r\n                    this._dynamicFeatures.set(message.method, feature);\r\n                }\r\n            }\r\n            else {\r\n                this._method2Message.set(messages.method, messages);\r\n                this._dynamicFeatures.set(messages.method, feature);\r\n            }\r\n        }\r\n    }\r\n    registerBuiltinFeatures() {\r\n        this.registerFeature(new ConfigurationFeature(this));\r\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\r\n        this.registerFeature(new WillSaveFeature(this));\r\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\r\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\r\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\r\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\r\n        this.registerFeature(new CompletionItemFeature(this));\r\n        this.registerFeature(new HoverFeature(this));\r\n        this.registerFeature(new SignatureHelpFeature(this));\r\n        this.registerFeature(new DefinitionFeature(this));\r\n        this.registerFeature(new ReferencesFeature(this));\r\n        this.registerFeature(new DocumentHighlightFeature(this));\r\n        this.registerFeature(new DocumentSymbolFeature(this));\r\n        this.registerFeature(new WorkspaceSymbolFeature(this));\r\n        this.registerFeature(new CodeActionFeature(this));\r\n        this.registerFeature(new CodeLensFeature(this));\r\n        this.registerFeature(new DocumentFormattingFeature(this));\r\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\r\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\r\n        this.registerFeature(new RenameFeature(this));\r\n        this.registerFeature(new DocumentLinkFeature(this));\r\n        this.registerFeature(new ExecuteCommandFeature(this));\r\n    }\r\n    fillInitializeParams(params) {\r\n        for (let feature of this._features) {\r\n            if (Is.func(feature.fillInitializeParams)) {\r\n                feature.fillInitializeParams(params);\r\n            }\r\n        }\r\n    }\r\n    computeClientCapabilities() {\r\n        let result = {};\r\n        ensure(result, 'workspace').applyEdit = true;\r\n        ensure(ensure(result, 'workspace'), 'workspaceEdit').documentChanges = true;\r\n        ensure(ensure(result, 'textDocument'), 'publishDiagnostics').relatedInformation = true;\r\n        for (let feature of this._features) {\r\n            feature.fillClientCapabilities(result);\r\n        }\r\n        return result;\r\n    }\r\n    initializeFeatures(_connection) {\r\n        let documentSelector = this._clientOptions.documentSelector;\r\n        for (let feature of this._features) {\r\n            feature.initialize(this._capabilities, documentSelector);\r\n        }\r\n    }\r\n    handleRegistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let registration of params.registrations) {\r\n                const feature = this._dynamicFeatures.get(registration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\r\n                    return;\r\n                }\r\n                const options = registration.registerOptions || {};\r\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\r\n                const data = {\r\n                    id: registration.id,\r\n                    registerOptions: options\r\n                };\r\n                feature.register(this._method2Message.get(registration.method), data);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    handleUnregistrationRequest(params) {\r\n        return new Promise((resolve, reject) => {\r\n            for (let unregistration of params.unregisterations) {\r\n                const feature = this._dynamicFeatures.get(unregistration.method);\r\n                if (!feature) {\r\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\r\n                    return;\r\n                }\r\n                feature.unregister(unregistration.id);\r\n            }\r\n            ;\r\n            resolve();\r\n        });\r\n    }\r\n    handleApplyWorkspaceEdit(params) {\r\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\r\n        // However doing it here adds some safety since the server can lag more behind then an extension.\r\n        let workspaceEdit = params.edit;\r\n        let openTextDocuments = new Map();\r\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\r\n        let versionMismatch = false;\r\n        if (workspaceEdit.documentChanges) {\r\n            for (const change of workspaceEdit.documentChanges) {\r\n                if (change.textDocument.version && change.textDocument.version >= 0) {\r\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\r\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\r\n                        versionMismatch = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (versionMismatch) {\r\n            return Promise.resolve({ applied: false });\r\n        }\r\n        return vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; });\r\n    }\r\n    ;\r\n    logFailedRequest(type, error) {\r\n        // If we get a request cancel don't log anything.\r\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled) {\r\n            return;\r\n        }\r\n        this.error(`Request ${type.method} failed.`, error);\r\n    }\r\n}\r\nexports.BaseLanguageClient = BaseLanguageClient;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(function (elem) { return string(elem); });\r\n}\r\nexports.stringArray = stringArray;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    var _disposable = { dispose: function () { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nvar CallbackList = /** @class */ (function () {\r\n    function CallbackList() {\r\n    }\r\n    CallbackList.prototype.add = function (callback, context, bucket) {\r\n        var _this = this;\r\n        if (context === void 0) { context = null; }\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: function () { return _this.remove(callback, context); } });\r\n        }\r\n    };\r\n    CallbackList.prototype.remove = function (callback, context) {\r\n        if (context === void 0) { context = null; }\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    };\r\n    CallbackList.prototype.invoke = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    CallbackList.prototype.isEmpty = function () {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    };\r\n    CallbackList.prototype.dispose = function () {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    };\r\n    return CallbackList;\r\n}());\r\nvar Emitter = /** @class */ (function () {\r\n    function Emitter(_options) {\r\n        this._options = _options;\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"event\", {\r\n        /**\r\n         * For the public to allow to subscribe\r\n         * to events from this Emitter\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._event) {\r\n                this._event = function (listener, thisArgs, disposables) {\r\n                    if (!_this._callbacks) {\r\n                        _this._callbacks = new CallbackList();\r\n                    }\r\n                    if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {\r\n                        _this._options.onFirstListenerAdd(_this);\r\n                    }\r\n                    _this._callbacks.add(listener, thisArgs);\r\n                    var result;\r\n                    result = {\r\n                        dispose: function () {\r\n                            _this._callbacks.remove(listener, thisArgs);\r\n                            result.dispose = Emitter._noop;\r\n                            if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {\r\n                                _this._options.onLastListenerRemove(_this);\r\n                            }\r\n                        }\r\n                    };\r\n                    if (Array.isArray(disposables)) {\r\n                        disposables.push(result);\r\n                    }\r\n                    return result;\r\n                };\r\n            }\r\n            return this._event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    Emitter.prototype.fire = function (event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    };\r\n    Emitter.prototype.dispose = function () {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    };\r\n    Emitter._noop = function () { };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar DefaultSize = 8192;\r\nvar CR = new Buffer('\\r', 'ascii')[0];\r\nvar LF = new Buffer('\\n', 'ascii')[0];\r\nvar CRLF = '\\r\\n';\r\nvar MessageBuffer = /** @class */ (function () {\r\n    function MessageBuffer(encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = new Buffer(DefaultSize);\r\n    }\r\n    MessageBuffer.prototype.append = function (chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = new Buffer(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = new Buffer(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    };\r\n    MessageBuffer.prototype.tryReadHeaders = function () {\r\n        var result = undefined;\r\n        var current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        var headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach(function (header) {\r\n            var index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            var key = header.substr(0, index);\r\n            var value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        var nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    };\r\n    MessageBuffer.prototype.tryReadContent = function (length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        var result = this.buffer.toString(this.encoding, 0, length);\r\n        var nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    };\r\n    Object.defineProperty(MessageBuffer.prototype, \"numberOfBytes\", {\r\n        get: function () {\r\n            return this.index;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MessageBuffer;\r\n}());\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nvar AbstractMessageReader = /** @class */ (function () {\r\n    function AbstractMessageReader() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    AbstractMessageReader.prototype.dispose = function () {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onError\", {\r\n        get: function () {\r\n            return this.errorEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.fireError = function (error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onClose\", {\r\n        get: function () {\r\n            return this.closeEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.fireClose = function () {\r\n        this.closeEmitter.fire(undefined);\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onPartialMessage\", {\r\n        get: function () {\r\n            return this.partialMessageEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.firePartialMessage = function (info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    };\r\n    AbstractMessageReader.prototype.asError = function (error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(\"Reader recevied error. Reason: \" + (Is.string(error.message) ? error.message : 'unknown'));\r\n        }\r\n    };\r\n    return AbstractMessageReader;\r\n}());\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nvar StreamMessageReader = /** @class */ (function (_super) {\r\n    __extends(StreamMessageReader, _super);\r\n    function StreamMessageReader(readable, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.readable = readable;\r\n        _this.buffer = new MessageBuffer(encoding);\r\n        _this._partialMessageTimeout = 10000;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StreamMessageReader.prototype, \"partialMessageTimeout\", {\r\n        get: function () {\r\n            return this._partialMessageTimeout;\r\n        },\r\n        set: function (timeout) {\r\n            this._partialMessageTimeout = timeout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StreamMessageReader.prototype.listen = function (callback) {\r\n        var _this = this;\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', function (data) {\r\n            _this.onData(data);\r\n        });\r\n        this.readable.on('error', function (error) { return _this.fireError(error); });\r\n        this.readable.on('close', function () { return _this.fireClose(); });\r\n    };\r\n    StreamMessageReader.prototype.onData = function (data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                var headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                var contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                var length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    };\r\n    StreamMessageReader.prototype.clearPartialMessageTimer = function () {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    };\r\n    StreamMessageReader.prototype.setPartialMessageTimer = function () {\r\n        var _this = this;\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout(function (token, timeout) {\r\n            _this.partialMessageTimer = undefined;\r\n            if (token === _this.messageToken) {\r\n                _this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                _this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    };\r\n    return StreamMessageReader;\r\n}(AbstractMessageReader));\r\nexports.StreamMessageReader = StreamMessageReader;\r\nvar IPCMessageReader = /** @class */ (function (_super) {\r\n    __extends(IPCMessageReader, _super);\r\n    function IPCMessageReader(process) {\r\n        var _this = _super.call(this) || this;\r\n        _this.process = process;\r\n        var eventEmitter = _this.process;\r\n        eventEmitter.on('error', function (error) { return _this.fireError(error); });\r\n        eventEmitter.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    IPCMessageReader.prototype.listen = function (callback) {\r\n        this.process.on('message', callback);\r\n    };\r\n    return IPCMessageReader;\r\n}(AbstractMessageReader));\r\nexports.IPCMessageReader = IPCMessageReader;\r\nvar SocketMessageReader = /** @class */ (function (_super) {\r\n    __extends(SocketMessageReader, _super);\r\n    function SocketMessageReader(socket, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf-8'; }\r\n        return _super.call(this, socket, encoding) || this;\r\n    }\r\n    return SocketMessageReader;\r\n}(StreamMessageReader));\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar ContentLength = 'Content-Length: ';\r\nvar CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nvar AbstractMessageWriter = /** @class */ (function () {\r\n    function AbstractMessageWriter() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    AbstractMessageWriter.prototype.dispose = function () {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    };\r\n    Object.defineProperty(AbstractMessageWriter.prototype, \"onError\", {\r\n        get: function () {\r\n            return this.errorEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageWriter.prototype.fireError = function (error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    };\r\n    Object.defineProperty(AbstractMessageWriter.prototype, \"onClose\", {\r\n        get: function () {\r\n            return this.closeEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageWriter.prototype.fireClose = function () {\r\n        this.closeEmitter.fire(undefined);\r\n    };\r\n    AbstractMessageWriter.prototype.asError = function (error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(\"Writer recevied error. Reason: \" + (Is.string(error.message) ? error.message : 'unknown'));\r\n        }\r\n    };\r\n    return AbstractMessageWriter;\r\n}());\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nvar StreamMessageWriter = /** @class */ (function (_super) {\r\n    __extends(StreamMessageWriter, _super);\r\n    function StreamMessageWriter(writable, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.writable = writable;\r\n        _this.encoding = encoding;\r\n        _this.errorCount = 0;\r\n        _this.writable.on('error', function (error) { return _this.fireError(error); });\r\n        _this.writable.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    StreamMessageWriter.prototype.write = function (msg) {\r\n        var json = JSON.stringify(msg);\r\n        var contentLength = Buffer.byteLength(json, this.encoding);\r\n        var headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    };\r\n    return StreamMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nvar IPCMessageWriter = /** @class */ (function (_super) {\r\n    __extends(IPCMessageWriter, _super);\r\n    function IPCMessageWriter(process) {\r\n        var _this = _super.call(this) || this;\r\n        _this.process = process;\r\n        _this.errorCount = 0;\r\n        _this.queue = [];\r\n        _this.sending = false;\r\n        var eventEmitter = _this.process;\r\n        eventEmitter.on('error', function (error) { return _this.fireError(error); });\r\n        eventEmitter.on('close', function () { return _this.fireClose; });\r\n        return _this;\r\n    }\r\n    IPCMessageWriter.prototype.write = function (msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    };\r\n    IPCMessageWriter.prototype.doWriteMessage = function (msg) {\r\n        var _this = this;\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, function (error) {\r\n                    _this.sending = false;\r\n                    if (error) {\r\n                        _this.errorCount++;\r\n                        _this.fireError(error, msg, _this.errorCount);\r\n                    }\r\n                    else {\r\n                        _this.errorCount = 0;\r\n                    }\r\n                    if (_this.queue.length > 0) {\r\n                        _this.doWriteMessage(_this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    };\r\n    return IPCMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nvar SocketMessageWriter = /** @class */ (function (_super) {\r\n    __extends(SocketMessageWriter, _super);\r\n    function SocketMessageWriter(socket, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.socket = socket;\r\n        _this.queue = [];\r\n        _this.sending = false;\r\n        _this.encoding = encoding;\r\n        _this.errorCount = 0;\r\n        _this.socket.on('error', function (error) { return _this.fireError(error); });\r\n        _this.socket.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    SocketMessageWriter.prototype.write = function (msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    };\r\n    SocketMessageWriter.prototype.doWriteMessage = function (msg) {\r\n        var _this = this;\r\n        var json = JSON.stringify(msg);\r\n        var contentLength = Buffer.byteLength(json, this.encoding);\r\n        var headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', function (error) {\r\n                if (error) {\r\n                    _this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    _this.socket.write(json, _this.encoding, function (error) {\r\n                        _this.sending = false;\r\n                        if (error) {\r\n                            _this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            _this.errorCount = 0;\r\n                        }\r\n                        if (_this.queue.length > 0) {\r\n                            _this.doWriteMessage(_this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    _this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    };\r\n    SocketMessageWriter.prototype.handleError = function (error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    };\r\n    return SocketMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","module.exports = require(\"net\");","module.exports = require(\"os\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCompletionItem extends code.CompletionItem {\r\n    constructor(label) {\r\n        super(label);\r\n    }\r\n}\r\nexports.default = ProtocolCompletionItem;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolCodeLens extends code.CodeLens {\r\n    constructor(range) {\r\n        super(range);\r\n    }\r\n}\r\nexports.default = ProtocolCodeLens;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nclass ProtocolDocumentLink extends code.DocumentLink {\r\n    constructor(range, target) {\r\n        super(range, target);\r\n    }\r\n}\r\nexports.default = ProtocolDocumentLink;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\nimport * as path from 'path';\r\nimport * as vscode from \"vscode\";\r\n\r\nimport {\r\n    LanguageClient,\r\n    LanguageClientOptions,\r\n    ServerOptions,\r\n    TransportKind,\r\n    Trace\r\n} from 'vscode-languageclient';\r\nimport { join } from 'path';\r\nimport {\r\n    TestHelper, Completion, getStoredCompletions, completionCommon, StoredCompletion, addUsing, storeCompletion, SetupWorkspaceRequest,\r\n    getAllProjectFiles, HoverRequest, getHoverString\r\n} from './util';\r\nimport { readdirSync, unlink, unlinkSync, readdir, Stats, lstat, lstatSync } from 'fs';\r\nimport { promisify } from 'util';\r\n\r\n\r\nconst debugServerLocation = join(\"server\", \"AutoUsing\", \"bin\", \"Debug\", \"netcoreapp2.1\", \"AutoUsing.dll\");\r\nconst releaseServerLocation = join(\"server\", \"AutoUsing\", \"bin\", \"Debug\", \"netcoreapp2.1\", \"publish\", \"AutoUsing.dll\");\r\n// const relativeServerLocation = debugging? debugServerLocation : releaseServerLocation;\r\nconst hoverRequest = \"custom/hoverRequest\";\r\nconst dotnetExe = 'dotnet';\r\nconst HANDLE_COMPLETION = \"custom/handleCompletion\";\r\nconst CLEAN_CACHE = \"autousing.cleanCache\";\r\nexport let testHelper: TestHelper;\r\nlet client: LanguageClient;\r\nexport function activate(context: vscode.ExtensionContext): void {\r\n\r\n    // The server is implemented in node\r\n    let releaseServerModule = context.asAbsolutePath(releaseServerLocation);\r\n    let debugServerModule = context.asAbsolutePath(debugServerLocation);\r\n\r\n    let setup: SetupWorkspaceRequest = {\r\n        extensionDir: context.extensionPath,\r\n        projects: getAllProjectFiles(),\r\n        workspaceStorageDir: context.storagePath!,\r\n        globalStorageDir: context.globalStoragePath\r\n    };\r\n\r\n    let message = JSON.stringify(setup);\r\n\r\n    let serverOptions: ServerOptions = {\r\n        run: { command: dotnetExe, args: [releaseServerModule, message] },\r\n        debug: { command: dotnetExe, args: [debugServerModule, message] },\r\n    };\r\n\r\n    let clientOptions: LanguageClientOptions = {\r\n        documentSelector: [\r\n            {\r\n                scheme: \"file\",\r\n                language: \"csharp\"\r\n            }\r\n        ],\r\n        synchronize: {\r\n            configurationSection: 'autousing',\r\n            fileEvents: vscode.workspace.createFileSystemWatcher('**/*.cs')\r\n        }\r\n\r\n    };\r\n\r\n\r\n    // Create the language client and start the client.\r\n    client = new LanguageClient('autousing', 'Auto-Using', serverOptions, clientOptions);\r\n    testHelper = new TestHelper(client);\r\n    client.onReady().then(() => {\r\n        //@ts-ignore\r\n        testHelper.started = true;\r\n\r\n\r\n        client.onRequest(hoverRequest, async (request: HoverRequest) => {\r\n\r\n            let pos: vscode.Position = new vscode.Position(request.pos.line, request.pos.character);\r\n            let uri = vscode.Uri.file(request.filePath);\r\n            let result = await getHoverString(uri, pos);\r\n            if (result === undefined) return undefined;\r\n            let str: string = result;\r\n            return str;\r\n        });\r\n\r\n    });\r\n\r\n    client.trace = chosenTrace();\r\n    let clientDisposable = client.start();\r\n\r\n    // Push the disposable to the context's subscriptions so that the\r\n    // client can be deactivated on extension deactivation\r\n    context.subscriptions.push(clientDisposable, registerHandleCompletionCommand(context), registerCleanGlobalCacheCommand(context));\r\n}\r\n\r\nfunction registerHandleCompletionCommand(context: vscode.ExtensionContext): vscode.Disposable {\r\n    return vscode.commands.registerCommand(HANDLE_COMPLETION, async (completion: Completion) => {\r\n        if (completion.Namespaces.length > 1) {\r\n            let completions = getStoredCompletions(context);\r\n            let namespacesSorted = await Promise.all(completion.Namespaces.sort((n1, n2) => {\r\n                let firstPrio = completionCommon(new StoredCompletion(completion.Name, n1), completions);\r\n                let secondPrio = completionCommon(new StoredCompletion(completion.Name, n2), completions);\r\n                if (firstPrio && !secondPrio)\r\n                    return -1;\r\n                if (!firstPrio && secondPrio)\r\n                    return 1;\r\n                return n1.localeCompare(n2);\r\n            }));\r\n            vscode.window.showQuickPick(namespacesSorted).then(pick => addUsing(pick, context, completion));\r\n        }\r\n        else {\r\n            storeCompletion(context, new StoredCompletion(completion.Name, completion.Namespaces[0]));\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Destroy all of the files located at globalStoragePath/cache\r\n */\r\nasync function cleanGlobalCache(context: vscode.ExtensionContext): Promise<void> {\r\n    let dir = join(context.globalStoragePath, globalCacheLocation);\r\n    await removeDirectoryContents(dir);\r\n}\r\n\r\n\r\nconst readdirPromise = promisify(readdir);\r\nconst lstatPromise = promisify(lstat);\r\nconst unlinkPromise = promisify(unlink);\r\n/**\r\n * Destroy all autousing cache files in all workspace storage directories\r\n */\r\nasync function cleanAllWorkspaceCache(context: vscode.ExtensionContext): Promise<void> {\r\n    // Go up to the workspaceStorage dir\r\n    let allWorkspaceStorageDir = path.dirname(path.dirname(context.storagePath));\r\n    //TODO: technically this could be sped up by dumping everything into a list of promises and then at the end awaiting it.\r\n\r\n    let workspaceDirs = await readdirPromise(allWorkspaceStorageDir);\r\n    // Go through the weird generated numbers workspace directories \r\n    for (let workspaceDir of workspaceDirs) {\r\n        let absoluteWorkspaceDir = join(allWorkspaceStorageDir, workspaceDir);\r\n        // Ignore files that are not folders\r\n        if (!(await lstatPromise(absoluteWorkspaceDir)).isDirectory()) continue;\r\n        // Go through the files in a specific workspace directory\r\n        let workspaceFiles = await readdirPromise(absoluteWorkspaceDir);\r\n        for (let workspaceFile of workspaceFiles) {\r\n            // Go only inside the auto-using storage directory\r\n            if (workspaceFile === extensionId) {\r\n                // Go through the cache files of a specific workspace\r\n                let cacheDir = join(allWorkspaceStorageDir, workspaceDir, workspaceFile, workspaceCacheLocation);\r\n                let projectCaches = await readdirPromise(cacheDir);\r\n                // Remove the cache files of all projects of the workspace\r\n                for (let projectCacheDir of projectCaches) {\r\n                   await removeDirectoryContents(join(cacheDir, projectCacheDir));\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n    // // Callback hell inc.\r\n    // readdir(allWorkspaceStorageDir, (e1, workspaceDirs) => {\r\n\r\n    //     for (let workspaceDir of workspaceDirs) {\r\n    //         // Go through the weird number directories\r\n    //         lstat(join(allWorkspaceStorageDir, workspaceDir), (e2, stats) => {\r\n    //             if (stats.isDirectory()) {\r\n    //                 // Go through the files in a specific workspace directory\r\n    //                 readdir(join(allWorkspaceStorageDir, workspaceDir), (e3, files) => {\r\n    //                     for (let file of files) {\r\n    //                         // Go inside the auto-using storage directory\r\n    //                         if (file === extensionId) {\r\n    //                             // Go through the cache files of a specific workspace\r\n    //                             let cacheDir = join(allWorkspaceStorageDir, workspaceDir, file, workspaceCacheLocation);\r\n    //                             readdir(cacheDir, (e4, projectCaches) => {\r\n    //                                 // Remove the cache files of all projects of the workspace\r\n    //                                 for (let projectCacheDir of projectCaches) {\r\n    //                                     removeDirectoryContents(join(cacheDir, projectCacheDir));\r\n    //                                 }\r\n    //                             });\r\n\r\n    //                         }\r\n    //                     }\r\n    //                 });\r\n    //             }\r\n    //         });\r\n    //     }\r\n    // });\r\n}\r\n\r\n\r\n\r\nasync function removeDirectoryContents(dir: string): Promise<void> {\r\n    for(let file of await readdirPromise(dir)){\r\n        await unlinkPromise(join(dir, file));\r\n    }\r\n}\r\n\r\nconst extensionId = \"fudge.auto-using\";\r\n\r\nfunction registerCleanGlobalCacheCommand(context: vscode.ExtensionContext): vscode.Disposable {\r\n    return vscode.commands.registerCommand(CLEAN_CACHE, async () => {\r\n        await Promise.all([cleanGlobalCache(context),cleanAllWorkspaceCache(context)]);\r\n\r\n        const reloadOption = \"Yes, reload.\";\r\n\r\n        let choice = await vscode.window.showInformationMessage(\"Caches have been cleaned. Would you like to reload the window to apply changes?\",\r\n            reloadOption);\r\n        if (choice === reloadOption) {\r\n            vscode.commands.executeCommand(\"workbench.action.reloadWindow\");\r\n        }\r\n    });\r\n}\r\n\r\nconst globalCacheLocation = \"cache\";\r\nconst workspaceCacheLocation = \"cache\";\r\n\r\nexport function deactivate(): Thenable<void> | undefined {\r\n    if (!client) {\r\n        return undefined;\r\n    }\r\n    return client.stop();\r\n}\r\n\r\nfunction chosenTrace(): Trace {\r\n    let config = vscode.workspace.getConfiguration(\"autousing\").get(\"trace.server\");\r\n    switch (config) {\r\n        case \"off\": return Trace.Off;\r\n        case \"messages\": return Trace.Messages;\r\n        case \"verbose\": return Trace.Verbose;\r\n    }\r\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst fs = require(\"fs\");\r\nconst client_1 = require(\"./client\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst colorProvider_1 = require(\"./colorProvider\");\r\nconst configuration_1 = require(\"./configuration\");\r\nconst implementation_1 = require(\"./implementation\");\r\nconst typeDefinition_1 = require(\"./typeDefinition\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst Is = require(\"./utils/is\");\r\nconst electron = require(\"./utils/electron\");\r\nconst processes_1 = require(\"./utils/processes\");\r\n__export(require(\"./client\"));\r\nvar Executable;\r\n(function (Executable) {\r\n    function is(value) {\r\n        return Is.string(value.command);\r\n    }\r\n    Executable.is = is;\r\n})(Executable || (Executable = {}));\r\nvar TransportKind;\r\n(function (TransportKind) {\r\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\r\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\r\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\r\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\r\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\r\nvar Transport;\r\n(function (Transport) {\r\n    function isSocket(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\r\n    }\r\n    Transport.isSocket = isSocket;\r\n})(Transport || (Transport = {}));\r\nvar NodeModule;\r\n(function (NodeModule) {\r\n    function is(value) {\r\n        return Is.string(value.module);\r\n    }\r\n    NodeModule.is = is;\r\n})(NodeModule || (NodeModule = {}));\r\nvar StreamInfo;\r\n(function (StreamInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\r\n    }\r\n    StreamInfo.is = is;\r\n})(StreamInfo || (StreamInfo = {}));\r\nvar ChildProcessInfo;\r\n(function (ChildProcessInfo) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\r\n    }\r\n    ChildProcessInfo.is = is;\r\n})(ChildProcessInfo || (ChildProcessInfo = {}));\r\nclass LanguageClient extends client_1.BaseLanguageClient {\r\n    constructor(arg1, arg2, arg3, arg4, arg5) {\r\n        let id;\r\n        let name;\r\n        let serverOptions;\r\n        let clientOptions;\r\n        let forceDebug;\r\n        if (Is.string(arg2)) {\r\n            id = arg1;\r\n            name = arg2;\r\n            serverOptions = arg3;\r\n            clientOptions = arg4;\r\n            forceDebug = !!arg5;\r\n        }\r\n        else {\r\n            id = arg1.toLowerCase();\r\n            name = arg1;\r\n            serverOptions = arg2;\r\n            clientOptions = arg3;\r\n            forceDebug = arg4;\r\n        }\r\n        if (forceDebug === void 0) {\r\n            forceDebug = false;\r\n        }\r\n        super(id, name, clientOptions);\r\n        this._serverOptions = serverOptions;\r\n        this._forceDebug = forceDebug;\r\n    }\r\n    stop() {\r\n        return super.stop().then(() => {\r\n            if (this._serverProcess) {\r\n                let toCheck = this._serverProcess;\r\n                this._serverProcess = undefined;\r\n                if (this._isDetached === void 0 || !this._isDetached) {\r\n                    this.checkProcessDied(toCheck);\r\n                }\r\n                this._isDetached = undefined;\r\n            }\r\n        });\r\n    }\r\n    checkProcessDied(childProcess) {\r\n        if (!childProcess) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            // Test if the process is still alive. Throws an exception if not\r\n            try {\r\n                process.kill(childProcess.pid, 0);\r\n                processes_1.terminate(childProcess);\r\n            }\r\n            catch (error) {\r\n                // All is fine.\r\n            }\r\n        }, 2000);\r\n    }\r\n    handleConnectionClosed() {\r\n        this._serverProcess = undefined;\r\n        super.handleConnectionClosed();\r\n    }\r\n    createMessageTransports(encoding) {\r\n        function getEnvironment(env) {\r\n            if (!env) {\r\n                return process.env;\r\n            }\r\n            let result = Object.create(null);\r\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\r\n            Object.keys(env).forEach(key => result[key] = env[key]);\r\n            return result;\r\n        }\r\n        function startedInDebugMode() {\r\n            let args = process.execArgv;\r\n            if (args) {\r\n                return args.some((arg) => /^--debug=?/.test(arg) || /^--debug-brk=?/.test(arg) || /^--inspect=?/.test(arg) || /^--inspect-brk=?/.test(arg));\r\n            }\r\n            ;\r\n            return false;\r\n        }\r\n        let server = this._serverOptions;\r\n        // We got a function.\r\n        if (Is.func(server)) {\r\n            return server().then((result) => {\r\n                if (client_1.MessageTransports.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return result;\r\n                }\r\n                else if (StreamInfo.is(result)) {\r\n                    this._isDetached = !!result.detached;\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(result.reader), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(result.writer) };\r\n                }\r\n                else {\r\n                    let cp;\r\n                    if (ChildProcessInfo.is(result)) {\r\n                        cp = result.process;\r\n                        this._isDetached = result.detached;\r\n                    }\r\n                    else {\r\n                        cp = result;\r\n                        this._isDetached = false;\r\n                    }\r\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                    return { reader: new vscode_languageserver_protocol_1.StreamMessageReader(cp.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(cp.stdin) };\r\n                }\r\n            });\r\n        }\r\n        let json;\r\n        let runDebug = server;\r\n        if (runDebug.run || runDebug.debug) {\r\n            // We are under debugging. So use debug as well.\r\n            if (typeof v8debug === 'object' || this._forceDebug || startedInDebugMode()) {\r\n                json = runDebug.debug;\r\n            }\r\n            else {\r\n                json = runDebug.run;\r\n            }\r\n        }\r\n        else {\r\n            json = server;\r\n        }\r\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\r\n            if (NodeModule.is(json) && json.module) {\r\n                let node = json;\r\n                let transport = node.transport || TransportKind.stdio;\r\n                if (node.runtime) {\r\n                    let args = [];\r\n                    let options = node.options || Object.create(null);\r\n                    if (options.execArgv) {\r\n                        options.execArgv.forEach(element => args.push(element));\r\n                    }\r\n                    args.push(node.module);\r\n                    if (node.args) {\r\n                        node.args.forEach(element => args.push(element));\r\n                    }\r\n                    let execOptions = Object.create(null);\r\n                    execOptions.cwd = serverWorkingDir;\r\n                    execOptions.env = getEnvironment(options.env);\r\n                    let pipeName = undefined;\r\n                    if (transport === TransportKind.ipc) {\r\n                        // exec options not correctly typed in lib\r\n                        execOptions.stdio = [null, null, null, 'ipc'];\r\n                        args.push('--node-ipc');\r\n                    }\r\n                    else if (transport === TransportKind.stdio) {\r\n                        args.push('--stdio');\r\n                    }\r\n                    else if (transport === TransportKind.pipe) {\r\n                        pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                        args.push(`--pipe=${pipeName}`);\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        args.push(`--socket=${transport.port}`);\r\n                    }\r\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                        let serverProcess = cp.spawn(node.runtime, args, execOptions);\r\n                        if (!serverProcess || !serverProcess.pid) {\r\n                            return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                        }\r\n                        this._serverProcess = serverProcess;\r\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                        if (transport === TransportKind.ipc) {\r\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(serverProcess) });\r\n                        }\r\n                        else {\r\n                            return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n                        }\r\n                    }\r\n                    else if (transport == TransportKind.pipe) {\r\n                        return vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                    else if (Transport.isSocket(transport)) {\r\n                        return vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                            let process = cp.spawn(node.runtime, args, execOptions);\r\n                            if (!process || !process.pid) {\r\n                                return Promise.reject(`Launching server using runtime ${node.runtime} failed.`);\r\n                            }\r\n                            this._serverProcess = process;\r\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                            return transport.onConnected().then((protocol) => {\r\n                                return { reader: protocol[0], writer: protocol[1] };\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    let pipeName = undefined;\r\n                    return new Promise((resolve, reject) => {\r\n                        let args = node.args && node.args.slice() || [];\r\n                        if (transport === TransportKind.ipc) {\r\n                            args.push('--node-ipc');\r\n                        }\r\n                        else if (transport === TransportKind.stdio) {\r\n                            args.push('--stdio');\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            pipeName = vscode_languageserver_protocol_1.generateRandomPipeName();\r\n                            args.push(`--pipe=${pipeName}`);\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            args.push(`--socket=${transport.port}`);\r\n                        }\r\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\r\n                        let options = node.options || Object.create(null);\r\n                        options.execArgv = options.execArgv || [];\r\n                        options.cwd = serverWorkingDir;\r\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\r\n                            electron.fork(node.module, args || [], options, (error, serverProcess) => {\r\n                                if (error || !serverProcess) {\r\n                                    reject(error);\r\n                                }\r\n                                else {\r\n                                    this._serverProcess = serverProcess;\r\n                                    serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                    if (transport === TransportKind.ipc) {\r\n                                        serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                        resolve({ reader: new vscode_languageserver_protocol_1.IPCMessageReader(this._serverProcess), writer: new vscode_languageserver_protocol_1.IPCMessageWriter(this._serverProcess) });\r\n                                    }\r\n                                    else {\r\n                                        resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        else if (transport === TransportKind.pipe) {\r\n                            vscode_languageserver_protocol_1.createClientPipeTransport(pipeName).then((transport) => {\r\n                                electron.fork(node.module, args || [], options, (error, cp) => {\r\n                                    if (error || !cp) {\r\n                                        reject(error);\r\n                                    }\r\n                                    else {\r\n                                        this._serverProcess = cp;\r\n                                        cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                        cp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                        transport.onConnected().then((protocol) => {\r\n                                            resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        else if (Transport.isSocket(transport)) {\r\n                            vscode_languageserver_protocol_1.createClientSocketTransport(transport.port).then((transport) => {\r\n                                electron.fork(node.module, args || [], options, (error, cp) => {\r\n                                    if (error || !cp) {\r\n                                        reject(error);\r\n                                    }\r\n                                    else {\r\n                                        this._serverProcess = cp;\r\n                                        cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                        cp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                                        transport.onConnected().then((protocol) => {\r\n                                            resolve({ reader: protocol[0], writer: protocol[1] });\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else if (Executable.is(json) && json.command) {\r\n                let command = json;\r\n                let args = command.args || [];\r\n                let options = command.options || Object.create(null);\r\n                options.cwd = serverWorkingDir;\r\n                let serverProcess = cp.spawn(command.command, args, options);\r\n                if (!serverProcess || !serverProcess.pid) {\r\n                    return Promise.reject(`Launching server using command ${command.command} failed.`);\r\n                }\r\n                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\r\n                this._serverProcess = serverProcess;\r\n                this._isDetached = !!options.detached;\r\n                return Promise.resolve({ reader: new vscode_languageserver_protocol_1.StreamMessageReader(serverProcess.stdout), writer: new vscode_languageserver_protocol_1.StreamMessageWriter(serverProcess.stdin) });\r\n            }\r\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\r\n        });\r\n    }\r\n    registerProposedFeatures() {\r\n        this.registerFeatures(ProposedFeatures.createAll(this));\r\n    }\r\n    registerBuiltinFeatures() {\r\n        super.registerBuiltinFeatures();\r\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\r\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\r\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\r\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\r\n        this.registerFeature(new workspaceFolders_1.WorkspaceFoldersFeature(this));\r\n    }\r\n    _mainGetRootPath() {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (!folders || folders.length === 0) {\r\n            return undefined;\r\n        }\r\n        let folder = folders[0];\r\n        if (folder.uri.scheme === 'file') {\r\n            return folder.uri.fsPath;\r\n        }\r\n        return undefined;\r\n    }\r\n    _getServerWorkingDir(options) {\r\n        let cwd = options && options.cwd;\r\n        if (!cwd) {\r\n            cwd = this.clientOptions.workspaceFolder\r\n                ? this.clientOptions.workspaceFolder.uri.fsPath\r\n                : this._mainGetRootPath();\r\n        }\r\n        if (cwd) {\r\n            // make sure the folder exists otherwise creating the process will fail\r\n            return new Promise(s => {\r\n                fs.lstat(cwd, (err, stats) => {\r\n                    s(!err && stats.isDirectory() ? cwd : undefined);\r\n                });\r\n            });\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n}\r\nexports.LanguageClient = LanguageClient;\r\nclass SettingMonitor {\r\n    constructor(_client, _setting) {\r\n        this._client = _client;\r\n        this._setting = _setting;\r\n        this._listeners = [];\r\n    }\r\n    start() {\r\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\r\n        this.onDidChangeConfiguration();\r\n        return new vscode_1.Disposable(() => {\r\n            if (this._client.needsStop()) {\r\n                this._client.stop();\r\n            }\r\n        });\r\n    }\r\n    onDidChangeConfiguration() {\r\n        let index = this._setting.indexOf('.');\r\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\r\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\r\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\r\n        if (enabled && this._client.needsStart()) {\r\n            this._client.start();\r\n        }\r\n        else if (!enabled && this._client.needsStop()) {\r\n            this._client.stop();\r\n        }\r\n    }\r\n}\r\nexports.SettingMonitor = SettingMonitor;\r\n// Exporting proposed protocol.\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    function createAll(_client) {\r\n        let result = [];\r\n        return result;\r\n    }\r\n    ProposedFeatures.createAll = createAll;\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nvar ResponseError = /** @class */ (function (_super) {\r\n    __extends(ResponseError, _super);\r\n    function ResponseError(code, message, data) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        _this.data = data;\r\n        Object.setPrototypeOf(_this, ResponseError.prototype);\r\n        return _this;\r\n    }\r\n    ResponseError.prototype.toJson = function () {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    };\r\n    return ResponseError;\r\n}(Error));\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nvar AbstractMessageType = /** @class */ (function () {\r\n    function AbstractMessageType(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    Object.defineProperty(AbstractMessageType.prototype, \"method\", {\r\n        get: function () {\r\n            return this._method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbstractMessageType.prototype, \"numberOfParams\", {\r\n        get: function () {\r\n            return this._numberOfParams;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbstractMessageType;\r\n}());\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nvar RequestType0 = /** @class */ (function (_super) {\r\n    __extends(RequestType0, _super);\r\n    function RequestType0(method) {\r\n        var _this = _super.call(this, method, 0) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType0;\r\n}(AbstractMessageType));\r\nexports.RequestType0 = RequestType0;\r\nvar RequestType = /** @class */ (function (_super) {\r\n    __extends(RequestType, _super);\r\n    function RequestType(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType;\r\n}(AbstractMessageType));\r\nexports.RequestType = RequestType;\r\nvar RequestType1 = /** @class */ (function (_super) {\r\n    __extends(RequestType1, _super);\r\n    function RequestType1(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType1;\r\n}(AbstractMessageType));\r\nexports.RequestType1 = RequestType1;\r\nvar RequestType2 = /** @class */ (function (_super) {\r\n    __extends(RequestType2, _super);\r\n    function RequestType2(method) {\r\n        var _this = _super.call(this, method, 2) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType2;\r\n}(AbstractMessageType));\r\nexports.RequestType2 = RequestType2;\r\nvar RequestType3 = /** @class */ (function (_super) {\r\n    __extends(RequestType3, _super);\r\n    function RequestType3(method) {\r\n        var _this = _super.call(this, method, 3) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType3;\r\n}(AbstractMessageType));\r\nexports.RequestType3 = RequestType3;\r\nvar RequestType4 = /** @class */ (function (_super) {\r\n    __extends(RequestType4, _super);\r\n    function RequestType4(method) {\r\n        var _this = _super.call(this, method, 4) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType4;\r\n}(AbstractMessageType));\r\nexports.RequestType4 = RequestType4;\r\nvar RequestType5 = /** @class */ (function (_super) {\r\n    __extends(RequestType5, _super);\r\n    function RequestType5(method) {\r\n        var _this = _super.call(this, method, 5) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType5;\r\n}(AbstractMessageType));\r\nexports.RequestType5 = RequestType5;\r\nvar RequestType6 = /** @class */ (function (_super) {\r\n    __extends(RequestType6, _super);\r\n    function RequestType6(method) {\r\n        var _this = _super.call(this, method, 6) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType6;\r\n}(AbstractMessageType));\r\nexports.RequestType6 = RequestType6;\r\nvar RequestType7 = /** @class */ (function (_super) {\r\n    __extends(RequestType7, _super);\r\n    function RequestType7(method) {\r\n        var _this = _super.call(this, method, 7) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType7;\r\n}(AbstractMessageType));\r\nexports.RequestType7 = RequestType7;\r\nvar RequestType8 = /** @class */ (function (_super) {\r\n    __extends(RequestType8, _super);\r\n    function RequestType8(method) {\r\n        var _this = _super.call(this, method, 8) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType8;\r\n}(AbstractMessageType));\r\nexports.RequestType8 = RequestType8;\r\nvar RequestType9 = /** @class */ (function (_super) {\r\n    __extends(RequestType9, _super);\r\n    function RequestType9(method) {\r\n        var _this = _super.call(this, method, 9) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType9;\r\n}(AbstractMessageType));\r\nexports.RequestType9 = RequestType9;\r\nvar NotificationType = /** @class */ (function (_super) {\r\n    __extends(NotificationType, _super);\r\n    function NotificationType(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType;\r\n}(AbstractMessageType));\r\nexports.NotificationType = NotificationType;\r\nvar NotificationType0 = /** @class */ (function (_super) {\r\n    __extends(NotificationType0, _super);\r\n    function NotificationType0(method) {\r\n        var _this = _super.call(this, method, 0) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType0;\r\n}(AbstractMessageType));\r\nexports.NotificationType0 = NotificationType0;\r\nvar NotificationType1 = /** @class */ (function (_super) {\r\n    __extends(NotificationType1, _super);\r\n    function NotificationType1(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType1;\r\n}(AbstractMessageType));\r\nexports.NotificationType1 = NotificationType1;\r\nvar NotificationType2 = /** @class */ (function (_super) {\r\n    __extends(NotificationType2, _super);\r\n    function NotificationType2(method) {\r\n        var _this = _super.call(this, method, 2) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType2;\r\n}(AbstractMessageType));\r\nexports.NotificationType2 = NotificationType2;\r\nvar NotificationType3 = /** @class */ (function (_super) {\r\n    __extends(NotificationType3, _super);\r\n    function NotificationType3(method) {\r\n        var _this = _super.call(this, method, 3) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType3;\r\n}(AbstractMessageType));\r\nexports.NotificationType3 = NotificationType3;\r\nvar NotificationType4 = /** @class */ (function (_super) {\r\n    __extends(NotificationType4, _super);\r\n    function NotificationType4(method) {\r\n        var _this = _super.call(this, method, 4) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType4;\r\n}(AbstractMessageType));\r\nexports.NotificationType4 = NotificationType4;\r\nvar NotificationType5 = /** @class */ (function (_super) {\r\n    __extends(NotificationType5, _super);\r\n    function NotificationType5(method) {\r\n        var _this = _super.call(this, method, 5) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType5;\r\n}(AbstractMessageType));\r\nexports.NotificationType5 = NotificationType5;\r\nvar NotificationType6 = /** @class */ (function (_super) {\r\n    __extends(NotificationType6, _super);\r\n    function NotificationType6(method) {\r\n        var _this = _super.call(this, method, 6) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType6;\r\n}(AbstractMessageType));\r\nexports.NotificationType6 = NotificationType6;\r\nvar NotificationType7 = /** @class */ (function (_super) {\r\n    __extends(NotificationType7, _super);\r\n    function NotificationType7(method) {\r\n        var _this = _super.call(this, method, 7) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType7;\r\n}(AbstractMessageType));\r\nexports.NotificationType7 = NotificationType7;\r\nvar NotificationType8 = /** @class */ (function (_super) {\r\n    __extends(NotificationType8, _super);\r\n    function NotificationType8(method) {\r\n        var _this = _super.call(this, method, 8) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType8;\r\n}(AbstractMessageType));\r\nexports.NotificationType8 = NotificationType8;\r\nvar NotificationType9 = /** @class */ (function (_super) {\r\n    __extends(NotificationType9, _super);\r\n    function NotificationType9(method) {\r\n        var _this = _super.call(this, method, 9) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType9;\r\n}(AbstractMessageType));\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    var candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    var candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    var candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nvar shortcutEvent = Object.freeze(function (callback, context) {\r\n    var handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose: function () { clearTimeout(handle); } };\r\n});\r\nvar MutableToken = /** @class */ (function () {\r\n    function MutableToken() {\r\n        this._isCancelled = false;\r\n    }\r\n    MutableToken.prototype.cancel = function () {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n        get: function () {\r\n            return this._isCancelled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n        get: function () {\r\n            if (this._isCancelled) {\r\n                return shortcutEvent;\r\n            }\r\n            if (!this._emitter) {\r\n                this._emitter = new events_1.Emitter();\r\n            }\r\n            return this._emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MutableToken;\r\n}());\r\nvar CancellationTokenSource = /** @class */ (function () {\r\n    function CancellationTokenSource() {\r\n    }\r\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n        get: function () {\r\n            if (!this._token) {\r\n                // be lazy and create the token only when\r\n                // actually needed\r\n                this._token = new MutableToken();\r\n            }\r\n            return this._token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CancellationTokenSource.prototype.cancel = function () {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    };\r\n    CancellationTokenSource.prototype.dispose = function () {\r\n        this.cancel();\r\n    };\r\n    return CancellationTokenSource;\r\n}());\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nvar LinkedMap = /** @class */ (function () {\r\n    function LinkedMap() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    LinkedMap.prototype.clear = function () {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    };\r\n    LinkedMap.prototype.isEmpty = function () {\r\n        return !this._head && !this._tail;\r\n    };\r\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkedMap.prototype.has = function (key) {\r\n        return this._map.has(key);\r\n    };\r\n    LinkedMap.prototype.get = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.set = function (key, value, touch) {\r\n        if (touch === void 0) { touch = Touch.None; }\r\n        var item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key: key, value: value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    };\r\n    LinkedMap.prototype.delete = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    };\r\n    LinkedMap.prototype.shift = function () {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        var item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\r\n        var current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    };\r\n    LinkedMap.prototype.forEachReverse = function (callbackfn, thisArg) {\r\n        var current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    };\r\n    LinkedMap.prototype.values = function () {\r\n        var result = [];\r\n        var current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    };\r\n    LinkedMap.prototype.keys = function () {\r\n        var result = [];\r\n        var current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    };\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    LinkedMap.prototype.addItemFirst = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    };\r\n    LinkedMap.prototype.addItemLast = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    };\r\n    LinkedMap.prototype.removeItem = function (item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    };\r\n    LinkedMap.prototype.touch = function (item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    };\r\n    return LinkedMap;\r\n}());\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path_1 = require(\"path\");\r\nvar os_1 = require(\"os\");\r\nvar crypto_1 = require(\"crypto\");\r\nvar net_1 = require(\"net\");\r\nvar messageReader_1 = require(\"./messageReader\");\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    var randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return \"\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-\" + randomSuffix + \"-sock\";\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), \"vscode-\" + randomSuffix + \".sock\");\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var connectResolve;\r\n    var connected = new Promise(function (resolve, _reject) {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        var server = net_1.createServer(function (socket) {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, function () {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: function () { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","module.exports = require(\"crypto\");","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar net_1 = require(\"net\");\r\nvar messageReader_1 = require(\"./messageReader\");\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var connectResolve;\r\n    var connected = new Promise(function (resolve, _reject) {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        var server = net_1.createServer(function (socket) {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', function () {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: function () { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n})(MarkedString || (MarkedString = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics) {\r\n        return { diagnostics: diagnostics };\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexport { DocumentLink };\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nexport var TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new vscode_jsonrpc_1.RequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new vscode_jsonrpc_1.NotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new vscode_jsonrpc_1.RequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new vscode_jsonrpc_1.NotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n//---- Configuration notification ----\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new vscode_jsonrpc_1.RequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new vscode_jsonrpc_1.NotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didOpen');\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didChange');\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didClose');\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didSave');\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/willSave');\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/willSaveWaitUntil');\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n//---- File eventing ----\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n//---- Diagnostic notification ----\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/completion');\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.type = new vscode_jsonrpc_1.RequestType('completionItem/resolve');\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n//---- Hover Support -------------------------------\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/hover');\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/signatureHelp');\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n//---- Goto Definition -------------------------------------\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/definition');\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/references');\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n//---- Document Highlight ----------------------------------\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentHighlight');\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n//---- Document Symbol Provider ---------------------------\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentSymbol');\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n//---- Workspace Symbol Provider ---------------------------\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.type = new vscode_jsonrpc_1.RequestType('workspace/symbol');\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeAction');\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeLens');\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new vscode_jsonrpc_1.RequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/formatting');\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rangeFormatting');\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/onTypeFormatting');\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rename');\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentLink');\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new vscode_jsonrpc_1.RequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new vscode_jsonrpc_1.RequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new vscode_jsonrpc_1.RequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/implementation');\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/typeDefinition');\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new vscode_jsonrpc_1.RequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst proto = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => value.toString();\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri)\r\n        };\r\n    }\r\n    function asVersionedTextDocumentIdentifier(textDocument) {\r\n        return {\r\n            uri: _uriConverter(textDocument.uri),\r\n            version: textDocument.version\r\n        };\r\n    }\r\n    function asOpenTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: {\r\n                uri: _uriConverter(textDocument.uri),\r\n                languageId: textDocument.languageId,\r\n                version: textDocument.version,\r\n                text: textDocument.getText()\r\n            }\r\n        };\r\n    }\r\n    function isTextDocumentChangeEvent(value) {\r\n        let candidate = value;\r\n        return !!candidate.document && !!candidate.contentChanges;\r\n    }\r\n    function isTextDocument(value) {\r\n        let candidate = value;\r\n        return !!candidate.uri && !!candidate.version;\r\n    }\r\n    function asChangeTextDocumentParams(arg) {\r\n        if (isTextDocument(arg)) {\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(arg.uri),\r\n                    version: arg.version\r\n                },\r\n                contentChanges: [{ text: arg.getText() }]\r\n            };\r\n            return result;\r\n        }\r\n        else if (isTextDocumentChangeEvent(arg)) {\r\n            let document = arg.document;\r\n            let result = {\r\n                textDocument: {\r\n                    uri: _uriConverter(document.uri),\r\n                    version: document.version\r\n                },\r\n                contentChanges: arg.contentChanges.map((change) => {\r\n                    let range = change.range;\r\n                    return {\r\n                        range: {\r\n                            start: { line: range.start.line, character: range.start.character },\r\n                            end: { line: range.end.line, character: range.end.character }\r\n                        },\r\n                        rangeLength: change.rangeLength,\r\n                        text: change.text\r\n                    };\r\n                })\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            throw Error('Unsupported text document change parameter');\r\n        }\r\n    }\r\n    function asCloseTextDocumentParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\r\n        let result = {\r\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\r\n        };\r\n        if (includeContent) {\r\n            result.text = textDocument.getText();\r\n        }\r\n        return result;\r\n    }\r\n    function asTextDocumentSaveReason(reason) {\r\n        switch (reason) {\r\n            case code.TextDocumentSaveReason.Manual:\r\n                return proto.TextDocumentSaveReason.Manual;\r\n            case code.TextDocumentSaveReason.AfterDelay:\r\n                return proto.TextDocumentSaveReason.AfterDelay;\r\n            case code.TextDocumentSaveReason.FocusOut:\r\n                return proto.TextDocumentSaveReason.FocusOut;\r\n        }\r\n        return proto.TextDocumentSaveReason.Manual;\r\n    }\r\n    function asWillSaveTextDocumentParams(event) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(event.document),\r\n            reason: asTextDocumentSaveReason(event.reason)\r\n        };\r\n    }\r\n    function asTextDocumentPositionParams(textDocument, position) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position)\r\n        };\r\n    }\r\n    function asTriggerKind(triggerKind) {\r\n        switch (triggerKind) {\r\n            case code.CompletionTriggerKind.TriggerCharacter:\r\n                return proto.CompletionTriggerKind.TriggerCharacter;\r\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\r\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\r\n            default:\r\n                return proto.CompletionTriggerKind.Invoked;\r\n        }\r\n    }\r\n    function asCompletionParams(textDocument, position, context) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: {\r\n                triggerKind: asTriggerKind(context.triggerKind),\r\n                triggerCharacter: context.triggerCharacter\r\n            }\r\n        };\r\n    }\r\n    function asWorkerPosition(position) {\r\n        return { line: position.line, character: position.character };\r\n    }\r\n    function asPosition(value) {\r\n        if (value === void 0) {\r\n            return undefined;\r\n        }\r\n        else if (value === null) {\r\n            return null;\r\n        }\r\n        return { line: value.line, character: value.character };\r\n    }\r\n    function asRange(value) {\r\n        if (value === void 0 || value === null) {\r\n            return value;\r\n        }\r\n        return { start: asPosition(value.start), end: asPosition(value.end) };\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        switch (value) {\r\n            case code.DiagnosticSeverity.Error:\r\n                return proto.DiagnosticSeverity.Error;\r\n            case code.DiagnosticSeverity.Warning:\r\n                return proto.DiagnosticSeverity.Warning;\r\n            case code.DiagnosticSeverity.Information:\r\n                return proto.DiagnosticSeverity.Information;\r\n            case code.DiagnosticSeverity.Hint:\r\n                return proto.DiagnosticSeverity.Hint;\r\n        }\r\n    }\r\n    function asDiagnostic(item) {\r\n        let result = proto.Diagnostic.create(asRange(item.range), item.message);\r\n        if (Is.number(item.severity)) {\r\n            result.severity = asDiagnosticSeverity(item.severity);\r\n        }\r\n        if (Is.number(item.code) || Is.string(item.code)) {\r\n            result.code = item.code;\r\n        }\r\n        if (item.source) {\r\n            result.source = item.source;\r\n        }\r\n        return result;\r\n    }\r\n    function asDiagnostics(items) {\r\n        if (items === void 0 || items === null) {\r\n            return items;\r\n        }\r\n        return items.map(asDiagnostic);\r\n    }\r\n    function asDocumentation(format, documentation) {\r\n        switch (format) {\r\n            case '$string':\r\n                return documentation;\r\n            case proto.MarkupKind.PlainText:\r\n                return { kind: format, value: documentation };\r\n            case proto.MarkupKind.Markdown:\r\n                return { kind: format, value: documentation.value };\r\n            default:\r\n                return `Unsupported Markup content received. Kind is: ${format}`;\r\n        }\r\n    }\r\n    function asCompletionItemKind(value, original) {\r\n        if (original !== void 0) {\r\n            return original;\r\n        }\r\n        return value + 1;\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = { label: item.label };\r\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        // We only send items back we created. So this can't be something else than\r\n        // a string right now.\r\n        if (item.documentation) {\r\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\r\n                result.documentation = item.documentation;\r\n            }\r\n            else {\r\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\r\n            }\r\n        }\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        fillPrimaryInsertText(result, item);\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (item.commitCharacters) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (protocolItem) {\r\n            if (protocolItem.data) {\r\n                result.data = protocolItem.data;\r\n            }\r\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\r\n                result.deprecated = protocolItem.deprecated;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function fillPrimaryInsertText(target, source) {\r\n        let format = proto.InsertTextFormat.PlainText;\r\n        let text;\r\n        let range = undefined;\r\n        if (source.textEdit) {\r\n            text = source.textEdit.newText;\r\n            range = asRange(source.textEdit.range);\r\n        }\r\n        else if (source.insertText instanceof code.SnippetString) {\r\n            format = proto.InsertTextFormat.Snippet;\r\n            text = source.insertText.value;\r\n        }\r\n        else {\r\n            text = source.insertText;\r\n        }\r\n        if (source.range) {\r\n            range = asRange(source.range);\r\n        }\r\n        target.insertTextFormat = format;\r\n        if (source.fromEdit && text && range) {\r\n            target.textEdit = { newText: text, range: range };\r\n        }\r\n        else {\r\n            target.insertText = text;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        return { range: asRange(edit.range), newText: edit.newText };\r\n    }\r\n    function asTextEdits(edits) {\r\n        if (edits === void 0 || edits === null) {\r\n            return edits;\r\n        }\r\n        return edits.map(asTextEdit);\r\n    }\r\n    function asReferenceParams(textDocument, position, options) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument),\r\n            position: asWorkerPosition(position),\r\n            context: { includeDeclaration: options.includeDeclaration }\r\n        };\r\n    }\r\n    function asCodeActionContext(context) {\r\n        if (context === void 0 || context === null) {\r\n            return context;\r\n        }\r\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics));\r\n    }\r\n    function asCommand(item) {\r\n        let result = proto.Command.create(item.title, item.command);\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLens(item) {\r\n        let result = proto.CodeLens.create(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item instanceof protocolCodeLens_1.default) {\r\n            if (item.data) {\r\n                result.data = item.data;\r\n            }\r\n            ;\r\n        }\r\n        return result;\r\n    }\r\n    function asFormattingOptions(item) {\r\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\r\n    }\r\n    function asDocumentSymbolParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asCodeLensParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    function asDocumentLink(item) {\r\n        let result = proto.DocumentLink.create(asRange(item.range));\r\n        if (item.target) {\r\n            result.target = asUri(item.target);\r\n        }\r\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\r\n        if (protocolItem && protocolItem.data) {\r\n            result.data = protocolItem.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLinkParams(textDocument) {\r\n        return {\r\n            textDocument: asTextDocumentIdentifier(textDocument)\r\n        };\r\n    }\r\n    return {\r\n        asUri,\r\n        asTextDocumentIdentifier,\r\n        asOpenTextDocumentParams,\r\n        asChangeTextDocumentParams,\r\n        asCloseTextDocumentParams,\r\n        asSaveTextDocumentParams,\r\n        asWillSaveTextDocumentParams,\r\n        asTextDocumentPositionParams,\r\n        asCompletionParams,\r\n        asWorkerPosition,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asDiagnostic,\r\n        asDiagnostics,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asReferenceParams,\r\n        asCodeActionContext,\r\n        asCommand,\r\n        asCodeLens,\r\n        asFormattingOptions,\r\n        asDocumentSymbolParams,\r\n        asCodeLensParams,\r\n        asDocumentLink,\r\n        asDocumentLinkParams\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst code = require(\"vscode\");\r\nconst ls = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\r\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\r\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\r\nvar CodeBlock;\r\n(function (CodeBlock) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\r\n    }\r\n    CodeBlock.is = is;\r\n})(CodeBlock || (CodeBlock = {}));\r\nfunction createConverter(uriConverter) {\r\n    const nullConverter = (value) => code.Uri.parse(value);\r\n    const _uriConverter = uriConverter || nullConverter;\r\n    function asUri(value) {\r\n        return _uriConverter(value);\r\n    }\r\n    function asDiagnostics(diagnostics) {\r\n        return diagnostics.map(asDiagnostic);\r\n    }\r\n    function asDiagnostic(diagnostic) {\r\n        let result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\r\n        if (Is.number(diagnostic.code) || Is.string(diagnostic.code)) {\r\n            result.code = diagnostic.code;\r\n        }\r\n        if (diagnostic.source) {\r\n            result.source = diagnostic.source;\r\n        }\r\n        if (diagnostic.relatedInformation) {\r\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\r\n        }\r\n        return result;\r\n    }\r\n    function asRelatedInformation(relatedInformation) {\r\n        return relatedInformation.map(asDiagnosticRelatedInformation);\r\n    }\r\n    function asDiagnosticRelatedInformation(information) {\r\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\r\n    }\r\n    function asPosition(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Position(value.line, value.character);\r\n    }\r\n    function asRange(value) {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n        return new code.Range(asPosition(value.start), asPosition(value.end));\r\n    }\r\n    function asDiagnosticSeverity(value) {\r\n        if (value === void 0 || value === null) {\r\n            return code.DiagnosticSeverity.Error;\r\n        }\r\n        switch (value) {\r\n            case ls.DiagnosticSeverity.Error:\r\n                return code.DiagnosticSeverity.Error;\r\n            case ls.DiagnosticSeverity.Warning:\r\n                return code.DiagnosticSeverity.Warning;\r\n            case ls.DiagnosticSeverity.Information:\r\n                return code.DiagnosticSeverity.Information;\r\n            case ls.DiagnosticSeverity.Hint:\r\n                return code.DiagnosticSeverity.Hint;\r\n        }\r\n        return code.DiagnosticSeverity.Error;\r\n    }\r\n    function asHoverContent(value) {\r\n        if (Is.string(value)) {\r\n            return new code.MarkdownString(value);\r\n        }\r\n        else if (CodeBlock.is(value)) {\r\n            let result = new code.MarkdownString();\r\n            return result.appendCodeblock(value.value, value.language);\r\n        }\r\n        else if (Array.isArray(value)) {\r\n            let result = new code.MarkdownString();\r\n            for (let element of value) {\r\n                if (CodeBlock.is(element)) {\r\n                    result.appendCodeblock(element.value, element.language);\r\n                }\r\n                else {\r\n                    result.appendMarkdown(element);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            let result;\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(value.value);\r\n                    return result;\r\n                default:\r\n                    result = new code.MarkdownString();\r\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\r\n                    return result;\r\n            }\r\n        }\r\n    }\r\n    function asDocumentation(value) {\r\n        if (Is.string(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            switch (value.kind) {\r\n                case ls.MarkupKind.Markdown:\r\n                    return new code.MarkdownString(value.value);\r\n                case ls.MarkupKind.PlainText:\r\n                    return value.value;\r\n                default:\r\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\r\n            }\r\n        }\r\n    }\r\n    function asHover(hover) {\r\n        if (!hover) {\r\n            return undefined;\r\n        }\r\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\r\n    }\r\n    function asCompletionResult(result) {\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        if (Array.isArray(result)) {\r\n            let items = result;\r\n            return items.map(asCompletionItem);\r\n        }\r\n        let list = result;\r\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\r\n    }\r\n    function asCompletionItemKind(value) {\r\n        // Protocol item kind is 1 based, codes item kind is zero based.\r\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\r\n            return [value - 1, undefined];\r\n        }\r\n        ;\r\n        return [code.CompletionItemKind.Text, value];\r\n    }\r\n    function asCompletionItem(item) {\r\n        let result = new protocolCompletionItem_1.default(item.label);\r\n        if (item.detail) {\r\n            result.detail = item.detail;\r\n        }\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\r\n        }\r\n        ;\r\n        if (item.filterText) {\r\n            result.filterText = item.filterText;\r\n        }\r\n        let insertText = asCompletionInsertText(item);\r\n        if (insertText) {\r\n            result.insertText = insertText.text;\r\n            result.range = insertText.range;\r\n            result.fromEdit = insertText.fromEdit;\r\n        }\r\n        if (Is.number(item.kind)) {\r\n            let [itemKind, original] = asCompletionItemKind(item.kind);\r\n            result.kind = itemKind;\r\n            if (original) {\r\n                result.originalItemKind = original;\r\n            }\r\n        }\r\n        if (item.sortText) {\r\n            result.sortText = item.sortText;\r\n        }\r\n        if (item.additionalTextEdits) {\r\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\r\n        }\r\n        if (Is.stringArray(item.commitCharacters)) {\r\n            result.commitCharacters = item.commitCharacters.slice();\r\n        }\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.deprecated === true || item.deprecated === false) {\r\n            result.deprecated = item.deprecated;\r\n        }\r\n        ;\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCompletionInsertText(item) {\r\n        if (item.textEdit) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n            else {\r\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\r\n            }\r\n        }\r\n        else if (item.insertText) {\r\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\r\n            }\r\n            else {\r\n                return { text: item.insertText, fromEdit: false };\r\n            }\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    function asTextEdit(edit) {\r\n        if (!edit) {\r\n            return undefined;\r\n        }\r\n        return new code.TextEdit(asRange(edit.range), edit.newText);\r\n    }\r\n    function asTextEdits(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asTextEdit);\r\n    }\r\n    function asSignatureHelp(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.SignatureHelp();\r\n        if (Is.number(item.activeSignature)) {\r\n            result.activeSignature = item.activeSignature;\r\n        }\r\n        else {\r\n            // activeSignature was optional in the past\r\n            result.activeSignature = 0;\r\n        }\r\n        if (Is.number(item.activeParameter)) {\r\n            result.activeParameter = item.activeParameter;\r\n        }\r\n        else {\r\n            // activeParameter was optional in the past\r\n            result.activeParameter = 0;\r\n        }\r\n        if (item.signatures) {\r\n            result.signatures = asSignatureInformations(item.signatures);\r\n        }\r\n        return result;\r\n    }\r\n    function asSignatureInformations(items) {\r\n        return items.map(asSignatureInformation);\r\n    }\r\n    function asSignatureInformation(item) {\r\n        let result = new code.SignatureInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        if (item.parameters) {\r\n            result.parameters = asParameterInformations(item.parameters);\r\n        }\r\n        return result;\r\n    }\r\n    function asParameterInformations(item) {\r\n        return item.map(asParameterInformation);\r\n    }\r\n    function asParameterInformation(item) {\r\n        let result = new code.ParameterInformation(item.label);\r\n        if (item.documentation) {\r\n            result.documentation = asDocumentation(item.documentation);\r\n        }\r\n        ;\r\n        return result;\r\n    }\r\n    function asDefinitionResult(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        if (Is.array(item)) {\r\n            return item.map((location) => asLocation(location));\r\n        }\r\n        else {\r\n            return asLocation(item);\r\n        }\r\n    }\r\n    function asLocation(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\r\n    }\r\n    function asReferences(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(location => asLocation(location));\r\n    }\r\n    function asDocumentHighlights(values) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(asDocumentHighlight);\r\n    }\r\n    function asDocumentHighlight(item) {\r\n        let result = new code.DocumentHighlight(asRange(item.range));\r\n        if (Is.number(item.kind)) {\r\n            result.kind = asDocumentHighlightKind(item.kind);\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentHighlightKind(item) {\r\n        switch (item) {\r\n            case ls.DocumentHighlightKind.Text:\r\n                return code.DocumentHighlightKind.Text;\r\n            case ls.DocumentHighlightKind.Read:\r\n                return code.DocumentHighlightKind.Read;\r\n            case ls.DocumentHighlightKind.Write:\r\n                return code.DocumentHighlightKind.Write;\r\n        }\r\n        return code.DocumentHighlightKind.Text;\r\n    }\r\n    function asSymbolInformations(values, uri) {\r\n        if (!values) {\r\n            return undefined;\r\n        }\r\n        return values.map(information => asSymbolInformation(information, uri));\r\n    }\r\n    function asSymbolKind(item) {\r\n        if (item <= ls.SymbolKind.TypeParameter) {\r\n            // Symbol kind is one based in the protocol and zero based in code.\r\n            return item - 1;\r\n        }\r\n        return code.SymbolKind.Property;\r\n    }\r\n    function asSymbolInformation(item, uri) {\r\n        // Symbol kind is one based in the protocol and zero based in code.\r\n        let result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\r\n        if (item.containerName) {\r\n            result.containerName = item.containerName;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommand(item) {\r\n        let result = { title: item.title, command: item.command };\r\n        if (item.arguments) {\r\n            result.arguments = item.arguments;\r\n        }\r\n        return result;\r\n    }\r\n    function asCommands(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asCommand);\r\n    }\r\n    function asCodeLens(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new protocolCodeLens_1.default(asRange(item.range));\r\n        if (item.command) {\r\n            result.command = asCommand(item.command);\r\n        }\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            result.data = item.data;\r\n        }\r\n        return result;\r\n    }\r\n    function asCodeLenses(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map((codeLens) => asCodeLens(codeLens));\r\n    }\r\n    function asWorkspaceEdit(item) {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        let result = new code.WorkspaceEdit();\r\n        if (item.documentChanges) {\r\n            item.documentChanges.forEach(change => {\r\n                result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\r\n            });\r\n        }\r\n        else if (item.changes) {\r\n            Object.keys(item.changes).forEach(key => {\r\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    function asDocumentLink(item) {\r\n        let range = asRange(item.range);\r\n        let target = item.target ? asUri(item.target) : undefined;\r\n        // target must be optional in DocumentLink\r\n        let link = new protocolDocumentLink_1.default(range, target);\r\n        if (item.data !== void 0 && item.data !== null) {\r\n            link.data = item.data;\r\n        }\r\n        return link;\r\n    }\r\n    function asDocumentLinks(items) {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(asDocumentLink);\r\n    }\r\n    return {\r\n        asUri,\r\n        asDiagnostics,\r\n        asDiagnostic,\r\n        asRange,\r\n        asPosition,\r\n        asDiagnosticSeverity,\r\n        asHover,\r\n        asCompletionResult,\r\n        asCompletionItem,\r\n        asTextEdit,\r\n        asTextEdits,\r\n        asSignatureHelp,\r\n        asSignatureInformations,\r\n        asSignatureInformation,\r\n        asParameterInformations,\r\n        asParameterInformation,\r\n        asDefinitionResult,\r\n        asLocation,\r\n        asReferences,\r\n        asDocumentHighlights,\r\n        asDocumentHighlight,\r\n        asDocumentHighlightKind,\r\n        asSymbolInformations,\r\n        asSymbolInformation,\r\n        asCommand,\r\n        asCommands,\r\n        asCodeLens,\r\n        asCodeLenses,\r\n        asWorkspaceEdit,\r\n        asDocumentLink,\r\n        asDocumentLinks\r\n    };\r\n}\r\nexports.createConverter = createConverter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Delayer {\r\n    constructor(defaultDelay) {\r\n        this.defaultDelay = defaultDelay;\r\n        this.timeout = undefined;\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n    }\r\n    trigger(task, delay = this.defaultDelay) {\r\n        this.task = task;\r\n        if (delay >= 0) {\r\n            this.cancelTimeout();\r\n        }\r\n        if (!this.completionPromise) {\r\n            this.completionPromise = new Promise((resolve) => {\r\n                this.onSuccess = resolve;\r\n            }).then(() => {\r\n                this.completionPromise = undefined;\r\n                this.onSuccess = undefined;\r\n                var result = this.task();\r\n                this.task = undefined;\r\n                return result;\r\n            });\r\n        }\r\n        if (delay >= 0 || this.timeout === void 0) {\r\n            this.timeout = setTimeout(() => {\r\n                this.timeout = undefined;\r\n                this.onSuccess(undefined);\r\n            }, delay >= 0 ? delay : this.defaultDelay);\r\n        }\r\n        return this.completionPromise;\r\n    }\r\n    forceDelivery() {\r\n        if (!this.completionPromise) {\r\n            return undefined;\r\n        }\r\n        this.cancelTimeout();\r\n        let result = this.task();\r\n        this.completionPromise = undefined;\r\n        this.onSuccess = undefined;\r\n        this.task = undefined;\r\n        return result;\r\n    }\r\n    isTriggered() {\r\n        return this.timeout !== void 0;\r\n    }\r\n    cancel() {\r\n        this.cancelTimeout();\r\n        this.completionPromise = undefined;\r\n    }\r\n    cancelTimeout() {\r\n        if (this.timeout !== void 0) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Delayer = Delayer;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ColorProviderFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'colorProvider').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.colorProvider) {\r\n            return;\r\n        }\r\n        const implCapabilities = capabilities.colorProvider;\r\n        const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n        const selector = implCapabilities.documentSelector || documentSelector;\r\n        if (selector) {\r\n            this.register(this.messages, {\r\n                id,\r\n                registerOptions: Object.assign({}, { documentSelector: selector })\r\n            });\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideColorPresentations = (color, context, token) => {\r\n            const requestParams = {\r\n                color,\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\r\n                range: client.code2ProtocolConverter.asRange(context.range)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(this.asColorPresentations.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let provideDocumentColors = (document, token) => {\r\n            const requestParams = {\r\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\r\n            };\r\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(this.asColorInformations.bind(this), (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerColorProvider(options.documentSelector, {\r\n            provideColorPresentations: (color, context, token) => {\r\n                return middleware.provideColorPresentations\r\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\r\n                    : provideColorPresentations(color, context, token);\r\n            },\r\n            provideDocumentColors: (document, token) => {\r\n                return middleware.provideDocumentColors\r\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\r\n                    : provideDocumentColors(document, token);\r\n            }\r\n        });\r\n    }\r\n    asColor(color) {\r\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\r\n    }\r\n    asColorInformations(colorInformation) {\r\n        if (Array.isArray(colorInformation)) {\r\n            return colorInformation.map(ci => {\r\n                return new vscode_1.ColorInformation(this._client.protocol2CodeConverter.asRange(ci.range), this.asColor(ci.color));\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n    asColorPresentations(colorPresentations) {\r\n        if (Array.isArray(colorPresentations)) {\r\n            return colorPresentations.map(cp => {\r\n                let presentation = new vscode_1.ColorPresentation(cp.label);\r\n                presentation.additionalTextEdits = this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\r\n                presentation.textEdit = this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\r\n                return presentation;\r\n            });\r\n        }\r\n        return [];\r\n    }\r\n}\r\nexports.ColorProviderFeature = ColorProviderFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nclass ConfigurationFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.configuration = true;\r\n    }\r\n    initialize() {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\r\n            let configuration = (params) => {\r\n                let result = [];\r\n                for (let item of params.items) {\r\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\r\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\r\n                }\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.configuration\r\n                ? middleware.configuration(params, token, configuration)\r\n                : configuration(params, token);\r\n        });\r\n    }\r\n    getConfiguration(resource, section) {\r\n        let result = null;\r\n        if (section) {\r\n            let index = section.lastIndexOf('.');\r\n            if (index === -1) {\r\n                result = vscode_1.workspace.getConfiguration(undefined, resource).get(section);\r\n            }\r\n            else {\r\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index));\r\n                if (config) {\r\n                    result = config.get(section.substr(index + 1));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\r\n            result = {};\r\n            for (let key of Object.keys(config)) {\r\n                if (config.has(key)) {\r\n                    result[key] = config.get(key);\r\n                }\r\n            }\r\n        }\r\n        if (!result) {\r\n            return null;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.ConfigurationFeature = ConfigurationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass ImplementationFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'implementation').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.implementationProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.implementationProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const implCapabilities = capabilities.implementationProvider;\r\n            const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n            const selector = implCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideImplementation = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerImplementationProvider(options.documentSelector, {\r\n            provideImplementation: (document, position, token) => {\r\n                return middleware.provideImplementation\r\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\r\n                    : provideImplementation(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.ImplementationFeature = ImplementationFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst client_1 = require(\"./client\");\r\nfunction ensure(target, key) {\r\n    if (target[key] === void 0) {\r\n        target[key] = {};\r\n    }\r\n    return target[key];\r\n}\r\nclass TypeDefinitionFeature extends client_1.TextDocumentFeature {\r\n    constructor(client) {\r\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\r\n    }\r\n    fillClientCapabilities(capabilites) {\r\n        ensure(ensure(capabilites, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\r\n    }\r\n    initialize(capabilities, documentSelector) {\r\n        if (!capabilities.typeDefinitionProvider) {\r\n            return;\r\n        }\r\n        if (capabilities.typeDefinitionProvider === true) {\r\n            if (!documentSelector) {\r\n                return;\r\n            }\r\n            this.register(this.messages, {\r\n                id: UUID.generateUuid(),\r\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\r\n            });\r\n        }\r\n        else {\r\n            const implCapabilities = capabilities.typeDefinitionProvider;\r\n            const id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\r\n            const selector = implCapabilities.documentSelector || documentSelector;\r\n            if (selector) {\r\n                this.register(this.messages, {\r\n                    id,\r\n                    registerOptions: Object.assign({}, { documentSelector: selector })\r\n                });\r\n            }\r\n        }\r\n    }\r\n    registerLanguageProvider(options) {\r\n        let client = this._client;\r\n        let provideTypeDefinition = (document, position, token) => {\r\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\r\n                client.logFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error);\r\n                return Promise.resolve(null);\r\n            });\r\n        };\r\n        let middleware = client.clientOptions.middleware;\r\n        return vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, {\r\n            provideTypeDefinition: (document, position, token) => {\r\n                return middleware.provideTypeDefinition\r\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\r\n                    : provideTypeDefinition(document, position, token);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UUID = require(\"./utils/uuid\");\r\nconst vscode_1 = require(\"vscode\");\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nfunction access(target, key) {\r\n    if (target === void 0) {\r\n        return undefined;\r\n    }\r\n    return target[key];\r\n}\r\nclass WorkspaceFoldersFeature {\r\n    constructor(_client) {\r\n        this._client = _client;\r\n        this._listeners = new Map();\r\n    }\r\n    get messages() {\r\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\r\n    }\r\n    fillInitializeParams(params) {\r\n        let folders = vscode_1.workspace.workspaceFolders;\r\n        if (folders === void 0) {\r\n            params.workspaceFolders = null;\r\n        }\r\n        else {\r\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\r\n        }\r\n    }\r\n    fillClientCapabilities(capabilities) {\r\n        capabilities.workspace = capabilities.workspace || {};\r\n        capabilities.workspace.workspaceFolders = true;\r\n    }\r\n    initialize(capabilities) {\r\n        let client = this._client;\r\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\r\n            let workspaceFolders = () => {\r\n                let folders = vscode_1.workspace.workspaceFolders;\r\n                if (folders === void 0) {\r\n                    return null;\r\n                }\r\n                let result = folders.map((folder) => {\r\n                    return this.asProtocol(folder);\r\n                });\r\n                return result;\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            return middleware && middleware.workspaceFolders\r\n                ? middleware.workspaceFolders(token, workspaceFolders)\r\n                : workspaceFolders(token);\r\n        });\r\n        let value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\r\n        let id;\r\n        if (typeof value === 'string') {\r\n            id = value;\r\n        }\r\n        else if (value === true) {\r\n            id = UUID.generateUuid();\r\n        }\r\n        if (id) {\r\n            this.register(this.messages, {\r\n                id: id,\r\n                registerOptions: undefined\r\n            });\r\n        }\r\n    }\r\n    register(_message, data) {\r\n        let id = data.id;\r\n        let client = this._client;\r\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\r\n            let didChangeWorkspaceFolders = (event) => {\r\n                let params = {\r\n                    event: {\r\n                        added: event.added.map(folder => this.asProtocol(folder)),\r\n                        removed: event.removed.map(folder => this.asProtocol(folder))\r\n                    }\r\n                };\r\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\r\n            };\r\n            let middleware = client.clientOptions.middleware.workspace;\r\n            middleware && middleware.didChangeWorkspaceFolders\r\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\r\n                : didChangeWorkspaceFolders(event);\r\n        });\r\n        this._listeners.set(id, disposable);\r\n    }\r\n    unregister(id) {\r\n        let disposable = this._listeners.get(id);\r\n        if (disposable === void 0) {\r\n            return;\r\n        }\r\n        this._listeners.delete(id);\r\n        disposable.dispose();\r\n    }\r\n    dispose() {\r\n        for (let disposable of this._listeners.values()) {\r\n            disposable.dispose();\r\n        }\r\n        this._listeners.clear();\r\n    }\r\n    asProtocol(workspaceFolder) {\r\n        if (workspaceFolder === void 0) {\r\n            return null;\r\n        }\r\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\r\n    }\r\n}\r\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path = require(\"path\");\r\nconst os = require(\"os\");\r\nconst net = require(\"net\");\r\nconst cp = require(\"child_process\");\r\nfunction makeRandomHexString(length) {\r\n    let chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n    let result = '';\r\n    for (let i = 0; i < length; i++) {\r\n        let idx = Math.floor(chars.length * Math.random());\r\n        result += chars[idx];\r\n    }\r\n    return result;\r\n}\r\nfunction generatePipeName() {\r\n    let randomName = 'vscode-lang-' + makeRandomHexString(40);\r\n    if (process.platform === 'win32') {\r\n        return '\\\\\\\\.\\\\pipe\\\\' + randomName + '-sock';\r\n    }\r\n    // Mac/Unix: use socket file\r\n    return path.join(os.tmpdir(), randomName + '.sock');\r\n}\r\nfunction generatePatchedEnv(env, stdInPipeName, stdOutPipeName) {\r\n    // Set the two unique pipe names and the electron flag as process env\r\n    let newEnv = {};\r\n    for (let key in env) {\r\n        newEnv[key] = env[key];\r\n    }\r\n    newEnv['STDIN_PIPE_NAME'] = stdInPipeName;\r\n    newEnv['STDOUT_PIPE_NAME'] = stdOutPipeName;\r\n    newEnv['ATOM_SHELL_INTERNAL_RUN_AS_NODE'] = '1';\r\n    newEnv['ELECTRON_RUN_AS_NODE'] = '1';\r\n    return newEnv;\r\n}\r\nfunction fork(modulePath, args, options, callback) {\r\n    let callbackCalled = false;\r\n    let resolve = (result) => {\r\n        if (callbackCalled) {\r\n            return;\r\n        }\r\n        callbackCalled = true;\r\n        callback(undefined, result);\r\n    };\r\n    let reject = (err) => {\r\n        if (callbackCalled) {\r\n            return;\r\n        }\r\n        callbackCalled = true;\r\n        callback(err, undefined);\r\n    };\r\n    // Generate two unique pipe names\r\n    let stdInPipeName = generatePipeName();\r\n    let stdOutPipeName = generatePipeName();\r\n    let newEnv = generatePatchedEnv(options.env || process.env, stdInPipeName, stdOutPipeName);\r\n    let childProcess;\r\n    // Begin listening to stdout pipe\r\n    let stdOutServer = net.createServer((stdOutStream) => {\r\n        // The child process will write exactly one chunk with content `ready` when it has installed a listener to the stdin pipe\r\n        stdOutStream.once('data', (_chunk) => {\r\n            // The child process is sending me the `ready` chunk, time to connect to the stdin pipe\r\n            childProcess.stdin = net.connect(stdInPipeName);\r\n            // From now on the childProcess.stdout is available for reading\r\n            childProcess.stdout = stdOutStream;\r\n            resolve(childProcess);\r\n        });\r\n    });\r\n    stdOutServer.listen(stdOutPipeName);\r\n    let serverClosed = false;\r\n    let closeServer = () => {\r\n        if (serverClosed) {\r\n            return;\r\n        }\r\n        serverClosed = true;\r\n        process.removeListener('exit', closeServer);\r\n        stdOutServer.close();\r\n    };\r\n    // Create the process\r\n    let bootstrapperPath = path.join(__dirname, 'electronForkStart');\r\n    childProcess = cp.fork(bootstrapperPath, [modulePath].concat(args), {\r\n        silent: true,\r\n        cwd: options.cwd,\r\n        env: newEnv,\r\n        execArgv: options.execArgv\r\n    });\r\n    childProcess.once('error', (err) => {\r\n        closeServer();\r\n        reject(err);\r\n    });\r\n    childProcess.once('exit', (err) => {\r\n        closeServer();\r\n        reject(err);\r\n    });\r\n    // On exit still close server\r\n    process.once('exit', closeServer);\r\n}\r\nexports.fork = fork;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst cp = require(\"child_process\");\r\nconst path_1 = require(\"path\");\r\nconst isWindows = (process.platform === 'win32');\r\nconst isMacintosh = (process.platform === 'darwin');\r\nconst isLinux = (process.platform === 'linux');\r\nfunction terminate(process, cwd) {\r\n    if (isWindows) {\r\n        try {\r\n            // This we run in Atom execFileSync is available.\r\n            // Ignore stderr since this is otherwise piped to parent.stderr\r\n            // which might be already closed.\r\n            let options = {\r\n                stdio: ['pipe', 'pipe', 'ignore']\r\n            };\r\n            if (cwd) {\r\n                options.cwd = cwd;\r\n            }\r\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\r\n            return true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else if (isLinux || isMacintosh) {\r\n        try {\r\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\r\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\r\n            return result.error ? false : true;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        process.kill('SIGKILL');\r\n        return true;\r\n    }\r\n}\r\nexports.terminate = terminate;\r\n","import { readFileSync, writeFile, existsSync, mkdirSync, writeFileSync, readdirSync, statSync } from \"fs\";\r\nimport { join } from \"path\";\r\nimport * as vscode from \"vscode\"\r\nimport { LanguageClient } from \"vscode-languageclient\";\r\n\r\nexport const SORT_CHEAT = \"\\u200B\";\r\nexport class TestHelper {\r\n\r\n    constructor(private client: LanguageClient, private started: boolean = false) { }\r\n}\r\n\r\nexport interface SetupWorkspaceRequest {\r\n    projects: string[];\r\n    workspaceStorageDir: string;\r\n    globalStorageDir: string;\r\n    extensionDir: string;\r\n\r\n}\r\n\r\nexport interface HoverRequest {\r\n    pos: vscode.Position;\r\n    filePath: string;\r\n}\r\nexport interface Completion {\r\n    Name: string;\r\n    Namespaces: string[];\r\n}\r\n\r\n\r\n/**\r\n * Returns whether or not a completion is included in the list of common completions that are stored. \r\n */\r\nexport function completionCommon(completion: StoredCompletion, completions: StoredCompletion[]): boolean {\r\n    return completions.some(c => c.label === completion.label && c.namespace === completion.namespace);\r\n}\r\n\r\n/**\r\n * Retrieve from the disk the list of common completions\r\n */\r\nexport function getStoredCompletions(context: vscode.ExtensionContext): StoredCompletion[] {\r\n    let dir = CommonCompletionDirectory(context);\r\n    let file = CommonCompletionLocation(context);\r\n    if (storageInvalid(file, dir)) return [];\r\n\r\n    var text = readFileSync(file).toString();\r\n    // Text should never be empty. \r\n    if (text == \"\") {\r\n        InitializeStorage(file);\r\n        return [];\r\n    }\r\n\r\n    return JSON.parse(text);\r\n}\r\n\r\n/**\r\n * Adds the completion to the list of common completions in the disk\r\n */\r\nexport function storeCompletion(context: vscode.ExtensionContext, completion: StoredCompletion) {\r\n    let existingStorage = getStoredCompletions(context);\r\n    existingStorage.push(completion);\r\n    let file = CommonCompletionLocation(context);\r\n    writeFile(file, JSON.stringify(existingStorage), () => null);\r\n\r\n\r\n}\r\n\r\n/**\r\n * Checks if the required files for the completions exist in the system. If not, it creates them and return false.\r\n */\r\nexport function storageInvalid(file: string, dir: string): boolean {\r\n    if (!existsSync(dir)) {\r\n        mkdirSync(dir);\r\n        InitializeStorage(file);\r\n        return true;\r\n    }\r\n    else if (!existsSync(file)) {\r\n        InitializeStorage(file);\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Inserts a using expression at the start of the document in the active text editor\r\n */\r\nexport function addUsing(pick: string | undefined, context: vscode.ExtensionContext, completion: Completion): void {\r\n    if (typeof pick === \"undefined\") return;\r\n    // Remove invisible unicode char\r\n    if (pick[0] === SORT_CHEAT) pick = pick.substr(1, pick.length);\r\n\r\n    storeCompletion(context, new StoredCompletion(completion.Name, pick));\r\n\r\n    let editBuilder = (textEdit: any) => {\r\n        textEdit.insert(new vscode.Position(0, 0), `using ${pick};\\n`);\r\n    };\r\n\r\n    vscode.window.activeTextEditor!.edit(editBuilder);\r\n}\r\n\r\nexport function InitializeStorage(location: string): void {\r\n    writeFileSync(location, \"[]\");\r\n}\r\n\r\n// import path = require('path');\r\n// import { existsSync, mkdirSync, writeFileSync, readFileSync, writeFile } from 'fs';\r\nconst CommonCompletionLocation = (context: vscode.ExtensionContext) => join(CommonCompletionDirectory(context), \"commonCompletions.json\");\r\nconst CommonCompletionDirectory = (context: vscode.ExtensionContext) => join(context.globalStoragePath!, \"completions\");\r\n\r\n\r\nconst typeInfoIdentifier = \"```csharp\\n\";\r\n\r\n\r\n/**\r\n * Gets the string that is in the hover result provided by the C# extension in a given position and file uri.\r\n */\r\nexport async function getHoverString(uri: vscode.Uri, position: vscode.Position): Promise<string | undefined> {\r\n    // Get the hover info of the variable from the C# extension\r\n    let hover = <vscode.Hover[]>(await vscode.commands.executeCommand(\"vscode.executeHoverProvider\", uri, position));\r\n    if (hover.length === 0) return undefined;\r\n\r\n    let hovers = hover[0].contents;\r\n    let typeHover = <{ language: string; value: string }>hovers.find(hover => {\r\n        let cast = <{ language: string; value: string }>hover;\r\n        return cast.value.startsWith(typeInfoIdentifier);\r\n    });\r\n\r\n    return typeHover.value;\r\n}\r\n\r\nexport class StoredCompletion {\r\n    constructor(public label: string, public namespace: string) { }\r\n}\r\n\r\nconst projectExtension = \".csproj\";\r\n\r\nexport function getAllProjectFiles(): string[] {\r\n    let workspaceFolders = vscode.workspace.workspaceFolders;\r\n    if (workspaceFolders === undefined) return [];\r\n    let files = flatten(workspaceFolders.map(folder => findByExtensionDeep(folder.uri.path.slice(1), projectExtension)));\r\n    return files;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function flatten<T>(arr: T[][]): T[] {\r\n    return arr.reduce((acc, val) => acc.concat(val), []);\r\n}\r\n\r\n\r\n\r\n\r\nexport function findByExtensionDeep(folder: string, extension: string): string[] {\r\n    // let projectFiles = glob.sync(folder + '/**/*.' + projectExtension);\r\n    // return projectFiles;\r\n    let result =  recFindByExtLogic(folder, extension, undefined, undefined);\r\n    return result;\r\n}\r\n\r\nfunction recFindByExtLogic(folder: string, extension: string, files: string[] | undefined, result: string[] | undefined): string[] {\r\n    files = files || readdirSync(folder);\r\n    result = result || [];\r\n\r\n\r\n    files.forEach(\r\n        (file) => {\r\n            let newFolder = join(folder, file)\r\n            if (statSync(newFolder).isDirectory()) {\r\n                result = recFindByExtLogic(newFolder, extension, readdirSync(newFolder), result);\r\n            }\r\n            else {\r\n                if (file.substr(-1 * (extension.length)) === extension) {\r\n                    result!.push(newFolder);\r\n                }\r\n            }\r\n        }\r\n    );\r\n    return result;\r\n}","module.exports = require(\"util\");"],"sourceRoot":""}